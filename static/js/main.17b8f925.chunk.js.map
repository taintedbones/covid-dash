{"version":3,"sources":["pages/MapPage/components/TotalCard.tsx","pages/HomePage/HomePage.tsx","pages/StatsPage/StatsCols.tsx","scripts/USFlagMatch.ts","Graphs/LineGraph.tsx","Graphs/USDataGraph.tsx","DataTable/DataTable.tsx","pages/StatsPage/USStatsPage.tsx","Graphs/parseData.ts","Graphs/GlobalDataGraphs.tsx","Graphs/CountryDataGraphs.tsx","pages/StatsPage/GlobalStatsPage.tsx","pages/MapPage/components/MapChart.tsx","pages/MapPage/components/SummaryList.tsx","pages/MapPage/MapPage.tsx","pages/MapPage/GlobalMapPage.tsx","pages/MapPage/USMapPage.tsx","pages/VaccinePage/VaccinePage.tsx","scripts/CountryISO3Match.ts","pages/VaccinePage/VaccineCols.tsx","pages/VaccinePage/GlobalVaccinesPage.tsx","pages/VaccinePage/USVaccinesPage.tsx","NavBar/NavBar.tsx","NavBar/AppFooter.tsx","App.js","reportWebVitals.js","index.js"],"names":["TotalCard","title","value","color","gridWidth","Fragment","Grid","item","container","xs","Paper","sx","padding","height","width","alignItems","Typography","align","variant","style","Intl","NumberFormat","format","HomePage","useState","totals","setTotals","useEffect","fetchTotals","a","axios","get","r","data","console","error","resourceButton","text","url","Link","href","target","rel","Button","spacing","display","className","justifyContent","todayCases","todayDeaths","todayRecovered","cases","deaths","recovered","Date","updated","toUTCString","gutterBottom","Divider","renderHistCell","params","countryPopCols","field","headerName","flex","valueGetter","row","countryInfo","flag","renderCell","src","alt","sortable","type","casesPerOneMillion","twoDayHist","deathsPerOneMillion","testsPerOneMillion","toLocaleString","countryTotalCols","active","provinceCols","hide","stats","confirmed","stateTotalCols","hist","statePopCols","countyCols","undefined","getUSFlag","state","code","name","find","LineGraph","margin","top","right","bottom","left","xScale","yScale","min","max","stacked","reverse","yFormat","curve","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","axisLeft","pointSize","pointColor","theme","colors","scheme","lineWidth","textColor","pointBorderWidth","pointBorderColor","from","pointLabelYOffset","useMesh","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","itemBackground","USDataGraph","setCases","setDeaths","parseData","input","dates","Object","keys","values","map","idx","x","y","fetchUSHistory","id","timeline","TableFooter","props","Box","sourceUrl","underline","sourceName","TableHeader","setShowPop","disabled","view","setView","paddingBottom","paddingRight","ToggleButtonGroup","exclusive","ToggleButton","onClick","e","styling","dataGrid","select","paper","USStatsPage","loading","setLoading","stateList","setStateList","countyList","setCountyList","stateName","setStateName","setState","setData","cols","setCols","stateNames","setStateNames","items","filterModel","setFilterModel","sort","sortModel","setSortModel","dataPerPop","setDataPerPop","dataSource","setDataSource","disableDataSelect","setDisableDataSelect","cntysFetched","setCntysFetched","fetchState","temp","states","names","forEach","push","fetchStatesHistory","stateHist","i","fetchCounties","counties","county","province","length","fetchCountiesHistory","toLowerCase","slice","findIndex","cnty","Number","ctyFetchList","columnField","operatorValue","Select","label","onChange","event","MenuItem","rows","columns","onSortModelChange","model","components","Footer","componentsProps","footer","GlobalDataGraphs","fetchGlobalHistory","CountryDataGraphs","country","flagImg","GlobalStatsPage","countryList","setCountryList","provinceList","setProvinceList","countryName","setCountryName","setCountry","countryNames","setCountryNames","fetchCountries","countries","fetchCountriesHistory","countriesHist","log","fetchProvinceHistory","provinces","provincesHist","fetchProvinces","countryProv","MapChart","mapConfig","defaultY","defaultProj","proj","projScale","setProjScale","setX","setY","grid","features","domain","unknownColor","valueFormat","projectionTranslation","projectionRotation","projectionScale","enableGraticule","graticuleLineColor","borderWidth","borderColor","background","Slider","step","track","SummaryList","density","MapPage","tests","GlobalMapPage","setCountries","confirmedCases","setConfirmedCases","activeCases","setActiveCases","recoveredCases","setRecoveredCases","deathsCases","setDeathsCases","setTitle","mapDomain","setMapDomain","getMax","arr","tempCountries","iso3","totalItem","feats","USMapPage","setStates","fetchStates","tempStates","VaccinesPage","tableCols","tableData","mapData","date","total","totalPerHundred","daily","dailyPerMillion","getCountryISO3","countryVaxCols","stateVaxCols","GlobalVaccinesPage","setTableData","setMapData","setTimeline","fetchGlobalTotal","fetchCountryData","fetchTimeline","USVaccinesPage","fetchStateData","splice","indexOf","index","NavBar","usMenuAnchor","setUsMenuAnchor","globalMenuAnchor","setGlobalMenuAnchor","vaxMenuAnchor","setVaxMenuAnchor","openUSMenu","Boolean","openGlobalMenu","openVaxMenu","styles","link","textDecoration","handleUSClose","handleGlobalClose","handleVaxClose","AppBar","position","Toolbar","to","marginRight","paddingTop","currentTarget","endIcon","KeyboardArrowDown","Menu","anchorEl","open","onClose","MenuListProps","AppFooter","App","darkTheme","createTheme","palette","mode","ThemeProvider","CssBaseline","basename","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17b8f925.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Grid, Paper, Typography } from \"@mui/material\";\r\n\r\n\r\nfunction TotalCard({ title, value, color, gridWidth }) {\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item container xs={gridWidth}>\r\n        <Paper sx={{ padding: \"5px\", height: \"100%\", width: \"100%\" }}>\r\n          <Grid item container xs={12} alignItems=\"center\" sx={{height: \"100px\"}}>\r\n            <Grid item xs={12}>\r\n              <Typography align=\"center\" variant=\"h6\" style={{ color: color }}>\r\n                {title}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography align=\"center\" variant=\"h4\" style={{ color: color }}>\r\n                {Intl.NumberFormat().format(value)}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default TotalCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Typography, Button, Link, Divider } from \"@mui/material\";\r\nimport { DataTotal } from \"../../scripts/DataInterfaces\";\r\nimport TotalCard from \"../MapPage/components/TotalCard\";\r\nimport { MdOutlineCoronavirus } from \"react-icons/md\";\r\nimport axios from \"axios\";\r\nimport \"../../App.css\";\r\n\r\nfunction HomePage() {\r\n  const [totals, setTotals] = useState<DataTotal>();\r\n\r\n  useEffect(() => {\r\n    const fetchTotals = async () => {\r\n      try {\r\n        const r = await axios.get(\r\n          \"https://disease.sh/v3/covid-19/all?allowNull=true\"\r\n        );\r\n        setTotals(r.data);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n    fetchTotals();\r\n  }, []);\r\n\r\n  const resourceButton = (text, url) => (\r\n    <Link href={url} target=\"_blank\" rel=\"noopener\">\r\n      <Button variant=\"contained\" sx={{ width: \"100%\", height: \"100px\" }}>\r\n        <Typography variant=\"h6\">{text}</Typography>\r\n      </Button>\r\n    </Link>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={5}>\r\n        <Grid item container xs={12}>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h1\" sx={{ display: \"inline-flex\" }}>\r\n              C<MdOutlineCoronavirus className=\"App-logo\" />\r\n              VID-19 Dashboard\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h4\">\r\n              Track the current pandemic with live data\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container xs={12} spacing={2} justifyContent=\"center\">\r\n          <TotalCard\r\n            title=\"Cases Today\"\r\n            value={totals?.todayCases}\r\n            color=\"khaki\"\r\n            gridWidth={4}\r\n          />\r\n          <TotalCard\r\n            title=\"Deaths Today\"\r\n            value={totals?.todayDeaths}\r\n            color=\"lightcoral\"\r\n            gridWidth={4}\r\n          />\r\n          <TotalCard\r\n            title=\"Recovered Today\"\r\n            value={totals?.todayRecovered}\r\n            color=\"lightgreen\"\r\n            gridWidth={4}\r\n          />\r\n          <TotalCard\r\n            title=\"Total Cases\"\r\n            value={totals?.cases}\r\n            color=\"khaki\"\r\n            gridWidth={4}\r\n          />\r\n          <TotalCard\r\n            title=\"Total Deaths\"\r\n            value={totals?.deaths}\r\n            color=\"lightcoral\"\r\n            gridWidth={4}\r\n          />\r\n          <TotalCard\r\n            title=\"Total Recovered\"\r\n            value={totals?.recovered}\r\n            color=\"lightgreen\"\r\n            gridWidth={4}\r\n          />\r\n          {totals && (\r\n            <Grid item xs={12}>\r\n              <Typography>\r\n                Updated: {new Date(totals?.updated).toUTCString()}\r\n              </Typography>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n        <Grid item container xs={12} spacing={4}>\r\n          <Grid item container xs={6} spacing={2} justifyContent=\"center\">\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h4\" gutterBottom>\r\n                COVID-19 Resources\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {resourceButton(\r\n                \"About COVID-19 (CDC.gov)\",\r\n                \"https://www.cdc.gov/coronavirus/2019-ncov/your-health/about-covid-19/basics-covid-19.html\"\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {resourceButton(\r\n                \"Testing for COVID-19 (CDC.gov)\",\r\n                \"https://www.cdc.gov/coronavirus/2019-ncov/testing/index.html\"\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {resourceButton(\r\n                \"Vaccines for COVID-19 (CDC.gov)\",\r\n                \"https://www.cdc.gov/coronavirus/2019-ncov/vaccines/index.html\"\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {resourceButton(\r\n                \"Find COVID-19 Vaccines & Boosters (US)\",\r\n                \"https://www.vaccines.gov/\"\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h4\" gutterBottom>\r\n              Data Resources\r\n            </Typography>\r\n            <Typography>\r\n              This website uses the{\" \"}\r\n              <Link href=\"https://github.com/disease-sh/API\">disease.sh</Link>{\" \"}\r\n              API to pull data every 10 minutes from the following sources:\r\n              <ul>\r\n                <li>John Hopkins University</li>\r\n                <li>Worldometers</li>\r\n                <li>RAPS</li>\r\n              </ul>\r\n            </Typography>\r\n            <Divider />\r\n            <Typography variant=\"h5\" gutterBottom>\r\n              Disclaimer\r\n            </Typography>\r\n            <Typography>\r\n              Data displayed on this website may not be 100% accurate or missing\r\n              entirely. This can result from a number of reasons including:\r\n              <ul>\r\n                <li>Countries/States not accurately reporting data</li>\r\n                <li>\r\n                  Countries/States not reporting data for large periods of time\r\n                </li>\r\n                <li>Researchers deeming data as unreliable</li>\r\n              </ul>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import { GridColDef, GridValueGetterParams } from \"@mui/x-data-grid\";\r\n\r\nconst renderHistCell = (params) => {\r\n  if (params.value > 0) {\r\n    return (\r\n      <span style={{ color: \"lightgreen\" }}>\r\n        + {Intl.NumberFormat().format(params.value)}\r\n      </span>\r\n    );\r\n  } else if (params.value < 0) {\r\n    return (\r\n      <span style={{ color: \"lightcoral\" }}>\r\n        - {Intl.NumberFormat().format(params.value * -1)}\r\n      </span>\r\n    );\r\n  } else {\r\n    return (\r\n      <span style={{ color: \"khaki\" }}>\r\n        {Intl.NumberFormat().format(params.value)}\r\n      </span>\r\n    );\r\n  }\r\n};\r\n\r\nexport const countryPopCols: GridColDef[] = [\r\n  {\r\n    field: \"flag\",\r\n    headerName: \"\",\r\n    flex: 0.5,\r\n    valueGetter: (params) => {\r\n      return params.row.countryInfo.flag;\r\n    },\r\n    renderCell: (params) => {\r\n      return (\r\n        <img\r\n          src={params.row.countryInfo.flag}\r\n          alt=\"\"\r\n          style={{ height: \"20px\" }}\r\n        />\r\n      );\r\n    },\r\n    sortable: false,\r\n  },\r\n  {\r\n    field: \"country\",\r\n    headerName: \"Country\",\r\n    flex: 1,\r\n  },\r\n  {\r\n    field: \"cases\",\r\n    headerName: \"Confirmed (per 1M)\",\r\n    flex: 1,\r\n    type: \"number\",\r\n    valueGetter: (params) => params.row.casesPerOneMillion,\r\n  },\r\n  {\r\n    field: \"casesHist\",\r\n    headerName: \"Confirmed (2 Day)\",\r\n    flex: 1,\r\n    valueGetter: (params) =>\r\n      params.row.casesPerOneMillion - params.row.twoDayHist.casesPerOneMillion,\r\n    renderCell: renderHistCell,\r\n    sortable: false,\r\n  },\r\n  {\r\n    field: \"deaths\",\r\n    headerName: \"Deaths (per 1M)\",\r\n    flex: 1,\r\n    type: \"number\",\r\n    valueGetter: (params) => params.row.deathsPerOneMillion,\r\n  },\r\n  {\r\n    field: \"deathsHist\",\r\n    headerName: \"Deaths (2 Day)\",\r\n    flex: 1,\r\n    valueGetter: (params) =>\r\n      params.row.deathsPerOneMillion -\r\n      params.row.twoDayHist.deathsPerOneMillion,\r\n    renderCell: renderHistCell,\r\n    sortable: false,\r\n  },\r\n  {\r\n    field: \"tests\",\r\n    headerName: \"Tests (per 1M)\",\r\n    flex: 1,\r\n    type: \"number\",\r\n    valueGetter: (params) => params.row.testsPerOneMillion,\r\n  },\r\n  {\r\n    field: \"testHist\",\r\n    headerName: \"Tests (2 Day)\",\r\n    flex: 1,\r\n    valueGetter: (params) =>\r\n      params.row.testsPerOneMillion - params.row.twoDayHist.testsPerOneMillion,\r\n    renderCell: renderHistCell,\r\n    sortable: false,\r\n  },\r\n  {\r\n    field: \"updated\",\r\n    headerName: \"Last Updated\",\r\n    flex: 1.5,\r\n    valueGetter: (params) => new Date(params.value).toLocaleString(),\r\n  },\r\n];\r\n\r\nexport const countryTotalCols: GridColDef[] = [\r\n  {\r\n    field: \"flag\",\r\n    headerName: \"\",\r\n    flex: 0.5,\r\n    valueGetter: (params) => {\r\n      return params.row.countryInfo.flag;\r\n    },\r\n    renderCell: (params) => {\r\n      return (\r\n        <img\r\n          src={params.row.countryInfo.flag}\r\n          alt=\"\"\r\n          style={{ height: \"20px\" }}\r\n        />\r\n      );\r\n    },\r\n    sortable: false,\r\n  },\r\n  {\r\n    field: \"country\",\r\n    headerName: \"Country\",\r\n    flex: 1,\r\n  },\r\n  {\r\n    field: \"active\",\r\n    headerName: \"Active\",\r\n    flex: 1,\r\n    type: \"number\",\r\n  },\r\n  {\r\n    field: \"activeHist\",\r\n    headerName: \"Active (2 Day)\",\r\n    flex: 1,\r\n    valueGetter: (params) => params.row.active - params.row.twoDayHist.active,\r\n    renderCell: renderHistCell,\r\n    sortable: false,\r\n  },\r\n  {\r\n    field: \"cases\",\r\n    headerName: \"Confirmed\",\r\n    flex: 1,\r\n    type: \"number\",\r\n  },\r\n  {\r\n    field: \"casesHist\",\r\n    headerName: \"Confirmed (2 Day)\",\r\n    flex: 1,\r\n    valueGetter: (params) => params.row.cases - params.row.twoDayHist.cases,\r\n    renderCell: renderHistCell,\r\n    sortable: false,\r\n  },\r\n  {\r\n    field: \"recovered\",\r\n    headerName: \"Recovered\",\r\n    flex: 1,\r\n    type: \"number\",\r\n  },\r\n  {\r\n    field: \"recoveredHist\",\r\n    headerName: \"Recovered (2 Day)\",\r\n    flex: 1,\r\n    valueGetter: (params) =>\r\n      params.row.recovered - params.row.twoDayHist.recovered,\r\n    renderCell: renderHistCell,\r\n    sortable: false,\r\n  },\r\n  {\r\n    field: \"deaths\",\r\n    headerName: \"Deaths\",\r\n    flex: 1,\r\n    type: \"number\",\r\n  },\r\n  {\r\n    field: \"deathsHist\",\r\n    headerName: \"Deaths (2 Day)\",\r\n    flex: 1,\r\n    valueGetter: (params) => params.row.deaths - params.row.twoDayHist.deaths,\r\n    renderCell: renderHistCell,\r\n    sortable: false,\r\n  },\r\n  {\r\n    field: \"updated\",\r\n    headerName: \"Last Updated\",\r\n    flex: 1.5,\r\n    valueGetter: (params) => new Date(params.value).toLocaleString(),\r\n  },\r\n];\r\n\r\nexport const provinceCols: GridColDef[] = [\r\n  {\r\n    field: \"country\",\r\n    headerName: \"Country\",\r\n    flex: 1,\r\n    hide: true,\r\n  },\r\n  {\r\n    field: \"province\",\r\n    headerName: \"Province\",\r\n    flex: 1,\r\n  },\r\n  {\r\n    field: \"cases\",\r\n    headerName: \"Confirmed\",\r\n    flex: 1,\r\n    type: \"number\",\r\n    valueGetter: (params) => params.row.stats.confirmed,\r\n  },\r\n  {\r\n    field: \"casesHist\",\r\n    headerName: \"Confirmed (2 Day)\",\r\n    flex: 1,\r\n    valueGetter: (params) => {\r\n      if (params.row.stats.confirmed !== null && params.row.twoDayHist.confirmed !== null) {\r\n        return params.row.stats.confirmed - params.row.twoDayHist.confirmed;\r\n      }\r\n    },\r\n    renderCell: renderHistCell,\r\n    sortable: false,\r\n  },\r\n  {\r\n    field: \"deaths\",\r\n    headerName: \"Deaths\",\r\n    flex: 1,\r\n    type: \"number\",\r\n    valueGetter: (params) => params.row.stats.deaths,\r\n  },\r\n  {\r\n    field: \"deathsHist\",\r\n    headerName: \"Deaths (2 Day)\",\r\n    flex: 1,\r\n    valueGetter: (params) => {\r\n      if (params.row.stats.deaths && params.row.twoDayHist.deaths) {\r\n        return params.row.stats.deaths - params.row.twoDayHist.deaths;\r\n      }\r\n    },\r\n    renderCell: renderHistCell,\r\n    sortable: false,\r\n  },\r\n  {\r\n    field: \"recovered\",\r\n    headerName: \"Recovered\",\r\n    flex: 1,\r\n    type: \"number\",\r\n    valueGetter: (params) => params.row.stats.recovered,\r\n  },\r\n  {\r\n    field: \"recoveredHist\",\r\n    headerName: \"Recovered (2 Day)\",\r\n    flex: 1,\r\n    valueGetter: (params) => {\r\n      if (params.row.stats.recovered && params.row.twoDayHist.recovered) {\r\n        return params.row.stats.recovered - params.row.twoDayHist.recovered;\r\n      }\r\n    },\r\n    renderCell: renderHistCell,\r\n    sortable: false,\r\n  },\r\n  {\r\n    field: \"updatedAt\",\r\n    headerName: \"Confirmed\",\r\n    flex: 1,\r\n    type: \"Date\",\r\n  },\r\n];\r\n\r\nexport const stateTotalCols: GridColDef[] = [\r\n  {\r\n    field: \"flag\",\r\n    headerName: \"\",\r\n    flex: 0.5,\r\n    valueGetter: (params) => {\r\n      return params.row.flag;\r\n    },\r\n    renderCell: (params) => {\r\n      return <img src={params.row.flag} alt=\"\" style={{ height: \"20px\" }} />;\r\n    },\r\n  },\r\n  {\r\n    field: \"state\",\r\n    headerName: \"State\",\r\n    flex: 1,\r\n  },\r\n  {\r\n    field: \"active\",\r\n    headerName: \"Active\",\r\n    flex: 1,\r\n    type: \"number\",\r\n  },\r\n  {\r\n    field: \"activeHist\",\r\n    headerName: \"Active (1 Day)\",\r\n    flex: 1,\r\n    valueGetter: (params) => params.row.active - params.row.hist.active,\r\n    renderCell: renderHistCell,\r\n    sortable: false,\r\n  },\r\n  {\r\n    field: \"cases\",\r\n    headerName: \"Cases\",\r\n    flex: 1,\r\n    type: \"number\",\r\n  },\r\n  {\r\n    field: \"casesHist\",\r\n    headerName: \"Confirmed (1 Day)\",\r\n    flex: 1,\r\n    valueGetter: (params) => params.row.cases - params.row.hist.cases,\r\n    renderCell: renderHistCell,\r\n    sortable: false,\r\n  },\r\n  {\r\n    field: \"recovered\",\r\n    headerName: \"Recovered\",\r\n    flex: 1,\r\n    type: \"number\",\r\n  },\r\n  {\r\n    field: \"recoveredHist\",\r\n    headerName: \"Recovered (1 Day)\",\r\n    flex: 1,\r\n    valueGetter: (params) => params.row.recovered - params.row.hist.recovered,\r\n    renderCell: renderHistCell,\r\n    sortable: false,\r\n  },\r\n  {\r\n    field: \"deaths\",\r\n    headerName: \"Deaths\",\r\n    flex: 1,\r\n    type: \"number\",\r\n  },\r\n  {\r\n    field: \"deathsHist\",\r\n    headerName: \"Deaths (1 Day)\",\r\n    flex: 1,\r\n    valueGetter: (params) => params.row.deaths - params.row.hist.deaths,\r\n    renderCell: renderHistCell,\r\n    sortable: false,\r\n  },\r\n  {\r\n    field: \"updated\",\r\n    headerName: \"Last Updated\",\r\n    flex: 1.5,\r\n    valueGetter: (params) => new Date(params.value).toLocaleString(),\r\n  },\r\n];\r\n\r\nexport const statePopCols: GridColDef[] = [\r\n  {\r\n    field: \"flag\",\r\n    headerName: \"\",\r\n    flex: 0.5,\r\n    valueGetter: (params) => {\r\n      return params.row.flag;\r\n    },\r\n    renderCell: (params) => {\r\n      return <img src={params.row.flag} alt=\"\" style={{ height: \"20px\" }} />;\r\n    },\r\n  },\r\n  {\r\n    field: \"state\",\r\n    headerName: \"State\",\r\n    flex: 1,\r\n  },\r\n  {\r\n    field: \"cases\",\r\n    headerName: \"Cases (per 1M)\",\r\n    flex: 1,\r\n    type: \"number\",\r\n    valueGetter: (params) => params.row.casesPerOneMillion,\r\n  },\r\n  {\r\n    field: \"casesHist\",\r\n    headerName: \"Confirmed (1 Day)\",\r\n    flex: 1,\r\n    valueGetter: (params) =>\r\n      params.row.casesPerOneMillion - params.row.hist.casesPerOneMillion,\r\n    renderCell: renderHistCell,\r\n    sortable: false,\r\n  },\r\n  {\r\n    field: \"deaths\",\r\n    headerName: \"Deaths (per 1M)\",\r\n    flex: 1,\r\n    type: \"number\",\r\n    valueGetter: (params) => params.row.deathsPerOneMillion,\r\n  },\r\n  {\r\n    field: \"deathsHist\",\r\n    headerName: \"Deaths (1 Day)\",\r\n    flex: 1,\r\n    valueGetter: (params) =>\r\n      params.row.deathsPerOneMillion - params.row.hist.deathsPerOneMillion,\r\n    renderCell: renderHistCell,\r\n    sortable: false,\r\n  },\r\n  {\r\n    field: \"tests\",\r\n    headerName: \"Tests (per 1M)\",\r\n    flex: 1,\r\n    type: \"number\",\r\n    valueGetter: (params) => params.row.testsPerOneMillion,\r\n  },\r\n  {\r\n    field: \"testsHist\",\r\n    headerName: \"Tests (1 Day)\",\r\n    flex: 1,\r\n    valueGetter: (params) =>\r\n      params.row.testsPerOneMillion - params.row.hist.testsPerOneMillion,\r\n    renderCell: renderHistCell,\r\n    sortable: false,\r\n  },\r\n  {\r\n    field: \"updated\",\r\n    headerName: \"Last Updated\",\r\n    flex: 1.5,\r\n    valueGetter: (params) => new Date(params.value).toLocaleString(),\r\n  },\r\n];\r\n\r\nexport const countyCols: GridColDef[] = [\r\n  {\r\n    field: \"province\",\r\n    flex: 1,\r\n    hide: true,\r\n  },\r\n  {\r\n    field: \"county\",\r\n    headerName: \"County\",\r\n    flex: 1,\r\n  },\r\n  {\r\n    field: \"cases\",\r\n    headerName: \"Cases\",\r\n    flex: 1,\r\n    type: \"number\",\r\n    valueGetter: (params: GridValueGetterParams) => params.row.stats.confirmed,\r\n  },\r\n  {\r\n    field: \"casesHist\",\r\n    headerName: \"Cases (1 Day)\",\r\n    flex: 1,\r\n\r\n    valueGetter: (params: GridValueGetterParams) => {\r\n      if (params.row.hist.confirmed !== undefined) {\r\n        return params.row.stats.confirmed -  params.row.hist.confirmed;\r\n      } else {\r\n        return null;\r\n      }\r\n    },\r\n    renderCell: renderHistCell\r\n  },\r\n  {\r\n    field: \"deaths\",\r\n    headerName: \"Deaths\",\r\n    flex: 1,\r\n    type: \"number\",\r\n    valueGetter: (params: GridValueGetterParams) => params.row.stats.deaths,\r\n  },\r\n  {\r\n    field: \"deathsHist\",\r\n    headerName: \"Deaths (1 Day)\",\r\n    flex: 1,\r\n    valueGetter: (params: GridValueGetterParams) => {\r\n      if (params.row.hist.deaths !== undefined) {\r\n        return params.row.stats.deaths - params.row.hist.deaths;\r\n      } else {\r\n        return null;\r\n      }\r\n    },\r\n    renderCell: renderHistCell\r\n  },\r\n  {\r\n    field: \"updatedAt\",\r\n    headerName: \"Last Updated\",\r\n    flex: 1,\r\n  },\r\n];\r\n","export function getUSFlag(state) {\r\n  const states = [\r\n    { name: \"Alabama\", code: \"al\" },\r\n    { name: \"Alaska\", code: \"ak\" },\r\n    { name: \"Arizona\", code: \"az\" },\r\n    { name: \"Arkansas\", code: \"ar\" },\r\n    { name: \"California\", code: \"ca\" },\r\n    { name: \"Colorado\", code: \"co\" },\r\n    { name: \"Connecticut\", code: \"ct\" },\r\n    { name: \"Delaware\", code: \"de\" },\r\n    { name: \"District of Columbia\", code: \"dc\" },\r\n    { name: \"Florida\", code: \"fl\" },\r\n    { name: \"Georgia\", code: \"ga\" },\r\n    { name: \"Hawaii\", code: \"hi\" },\r\n    { name: \"Idaho\", code: \"id\" },\r\n    { name: \"Illinois\", code: \"il\" },\r\n    { name: \"Indiana\", code: \"in\" },\r\n    { name: \"Iowa\", code: \"ia\" },\r\n    { name: \"Kansas\", code: \"ks\" },\r\n    { name: \"Kentucky\", code: \"ky\" },\r\n    { name: \"Louisiana\", code: \"la\" },\r\n    { name: \"Maine\", code: \"me\" },\r\n    { name: \"Maryland\", code: \"md\" },\r\n    { name: \"Massachusetts\", code: \"ma\" },\r\n    { name: \"Michigan\", code: \"mi\" },\r\n    { name: \"Minnesota\", code: \"mn\" },\r\n    { name: \"Mississippi\", code: \"ms\" },\r\n    { name: \"Missouri\", code: \"mo\" },\r\n    { name: \"Montana\", code: \"mt\" },\r\n    { name: \"Nebraska\", code: \"ne\" },\r\n    { name: \"Nevada\", code: \"nv\" },\r\n    { name: \"New Hampshire\", code: \"nh\" },\r\n    { name: \"New Jersey\", code: \"nj\" },\r\n    { name: \"New Mexico\", code: \"nm\" },\r\n    { name: \"New York\", code: \"ny\" },\r\n    { name: \"North Carolina\", code: \"nc\" },\r\n    { name: \"North Dakota\", code: \"nd\" },\r\n    { name: \"Ohio\", code: \"oh\" },\r\n    { name: \"Oklahoma\", code: \"ok\" },\r\n    { name: \"Oregon\", code: \"or\" },\r\n    { name: \"Pennsylvania\", code: \"pa\" },\r\n    { name: \"Puerto Rico\", code: \"pr\" },\r\n    { name: \"Rhode Island\", code: \"ri\" },\r\n    { name: \"South Carolina\", code: \"sc\" },\r\n    { name: \"South Dakota\", code: \"sd\" },\r\n    { name: \"Tennessee\", code: \"tn\" },\r\n    { name: \"Texas\", code: \"tx\" },\r\n    { name: \"Utah\", code: \"ut\" },\r\n    { name: \"Vermont\", code: \"vt\" },\r\n    { name: \"Virginia\", code: \"va\" },\r\n    { name: \"Virgin Islands\", code: \"vi\" },\r\n    { name: \"Washington\", code: \"wa\" },\r\n    { name: \"West Virginia\", code: \"wv\" },\r\n    { name: \"Wisconsin\", code: \"wi\" },\r\n    { name: \"Wyoming\", code: \"wy\" },\r\n  ];\r\n\r\n  const code = states.find((item) => item.name === state)?.code;\r\n\r\n  return code ? \"http://flags.ox3.in/svg/us/\" + code + \".svg\" : null;\r\n}\r\n","import React from \"react\";\r\nimport { Grid, Typography, Paper } from \"@mui/material\";\r\nimport { ResponsiveLine } from \"@nivo/line\";\r\n\r\nfunction LineGraph({ title, data }) {\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\">{title}</Typography>\r\n      </Grid>\r\n      <Grid item xs={12} sx={{ height: \"500px\", width: \"100%\" }}>\r\n        <Paper style={{ height: \"inherit\", padding: \"10px\", color: \"black\" }}>\r\n          <ResponsiveLine\r\n            data={data}\r\n            margin={{ top: 10, right: 130, bottom: 70, left: 70 }}\r\n            xScale={{ type: \"point\" }}\r\n            yScale={{\r\n              type: \"linear\",\r\n              min: \"auto\",\r\n              max: \"auto\",\r\n              stacked: true,\r\n              reverse: false,\r\n            }}\r\n            yFormat=\">-.1f\"\r\n            curve=\"natural\"\r\n            axisTop={null}\r\n            axisRight={null}\r\n            axisBottom={{\r\n              tickSize: 5, \r\n              tickPadding: 5,\r\n              tickRotation: -35,\r\n              legend: \"Date (10 Day Period)\",\r\n              legendOffset: 50,\r\n              legendPosition: \"middle\",\r\n            }}\r\n            axisLeft={{\r\n              tickSize: 5,\r\n              tickPadding: 5,\r\n              tickRotation: 0,\r\n              legend: \"Cases (per million)\",\r\n              legendOffset: -60,\r\n              legendPosition: \"middle\",\r\n            }}\r\n            pointSize={7}\r\n            pointColor={{ theme: \"grid.line.stroke\" }}\r\n            colors={{ scheme: \"accent\" }}\r\n            lineWidth={6}\r\n            theme={{ textColor: \"white\" }}\r\n            pointBorderWidth={2}\r\n            pointBorderColor={{ from: \"serieColor\" }}\r\n            pointLabelYOffset={-12}\r\n            useMesh={true}\r\n            legends={[\r\n              {\r\n                anchor: \"top-right\",\r\n                direction: \"column\",\r\n                justify: false,\r\n                translateX: 100,\r\n                translateY: 0,\r\n                itemsSpacing: 0,\r\n                itemDirection: \"left-to-right\",\r\n                itemWidth: 80,\r\n                itemHeight: 20,\r\n                itemOpacity: 0.75,\r\n                symbolSize: 12,\r\n                symbolShape: \"circle\",\r\n                symbolBorderColor: \"rgba(0, 0, 0, .5)\",\r\n                effects: [\r\n                  {\r\n                    on: \"hover\",\r\n                    style: {\r\n                      itemBackground: \"rgba(0, 0, 0, .03)\",\r\n                      itemOpacity: 1,\r\n                    },\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </Paper>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default LineGraph;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid } from \"@mui/material\";\r\nimport LineGraph from \"./LineGraph\";\r\nimport axios from \"axios\";\r\n\r\nfunction USDataGraph() {\r\n  const [cases, setCases] = useState<any[]>([]);\r\n  const [deaths, setDeaths] = useState<any[]>([]);\r\n\r\n  useEffect(() => {\r\n    const parseData = (input) => {\r\n      const dates: any = Object.keys(input);\r\n      const values: any = Object.values(input);\r\n\r\n      const stats = dates.map((item, idx) => ({\r\n        x: item,\r\n        y: values[idx] / 1000000,\r\n      }));\r\n\r\n      return stats;\r\n    };\r\n\r\n    const fetchUSHistory = async () => {\r\n      try {\r\n        const r = await axios.get(\r\n          \"https://disease.sh/v3/covid-19/historical/USA?lastdays=10\"\r\n        );\r\n\r\n        setCases([{ id: \"Cases\", data: parseData(r.data.timeline.cases) }]);\r\n        setDeaths([{ id: \"Deaths\", data: parseData(r.data.timeline.deaths) }]);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    fetchUSHistory();\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item container xs={6} justifyContent=\"center\">\r\n        <LineGraph title={\"Total Cases\"} data={cases} />\r\n      </Grid>\r\n      <Grid item container xs={6} justifyContent=\"center\">\r\n        <LineGraph title={\"Total Deaths\"} data={deaths} />\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default USDataGraph;\r\n","import { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Link,\r\n  Typography,\r\n  ToggleButton,\r\n  ToggleButtonGroup,\r\n} from \"@mui/material\";\r\n\r\nexport function TableFooter(props: { sourceName; sourceUrl }) {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        height: \"50px\",\r\n        padding: \"5px\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <Typography variant=\"caption\">\r\n        Source:{\" \"}\r\n        <Link href={props.sourceUrl} underline=\"hover\">\r\n          {props.sourceName}\r\n        </Link>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport function TableHeader({ setShowPop, disabled }) {\r\n  const [view, setView] = useState<any>(\"total\");\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        alignItems: \"center\",\r\n        height: \"50px\",\r\n        paddingBottom: \"20px\",\r\n      }}\r\n    >\r\n      <Typography sx={{ paddingRight: \" 10px\" }}>Data View: </Typography>\r\n      <ToggleButtonGroup\r\n        value={view}\r\n        exclusive\r\n        sx={{ height: \"50px\" }}\r\n        disabled={disabled}\r\n      >\r\n        <ToggleButton\r\n          value=\"total\"\r\n          onClick={() => {\r\n            setShowPop(false);\r\n            setView(\"total\");\r\n          }}\r\n        >\r\n          Total\r\n        </ToggleButton>\r\n        <ToggleButton\r\n          value=\"population\"\r\n          onClick={(e) => {\r\n            setShowPop(true);\r\n            setView(\"population\");\r\n          }}\r\n        >\r\n          Per population\r\n        </ToggleButton>\r\n      </ToggleButtonGroup>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Grid, MenuItem, Select, Paper } from \"@mui/material\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { State, County } from \"../../scripts/DataInterfaces\";\r\nimport { stateTotalCols, statePopCols, countyCols } from \"./StatsCols\";\r\nimport { getUSFlag } from \"../../scripts/USFlagMatch\";\r\nimport TotalCard from \"../MapPage/components/TotalCard\";\r\nimport USDataGraph from \"../../Graphs/USDataGraph\";\r\nimport { TableFooter, TableHeader } from \"../../DataTable/DataTable\";\r\nimport axios from \"axios\";\r\n\r\nconst styling = {\r\n  dataGrid: {\r\n    height: \"600px\",\r\n  },\r\n  select: {\r\n    width: \"100%\",\r\n    color: \"white\",\r\n  },\r\n  paper: {\r\n    padding: \"10px\",\r\n    height: \"100%\",\r\n  },\r\n};\r\n\r\nfunction USStatsPage() {\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [stateList, setStateList] = useState<State[]>([]);\r\n  const [countyList, setCountyList] = useState<County[]>([]);\r\n  const [stateName, setStateName] = useState<string>(\"All\");\r\n  const [state, setState] = useState<State>();\r\n  const [data, setData] = useState<State[] | County[]>([]);\r\n  const [cols, setCols] = useState<any>(stateTotalCols);\r\n  const [stateNames, setStateNames] = useState<string[]>([]);\r\n  const [filterModel, setFilterModel] = useState<any>({\r\n    items: [],\r\n  });\r\n  const [sortModel, setSortModel] = useState<any>([\r\n    { field: \"cases\", sort: \"desc\" },\r\n  ]);\r\n  const [dataPerPop, setDataPerPop] = useState<boolean>(false);\r\n  const [dataSource, setDataSource] = useState<any>({\r\n    name: \"Worldometers\",\r\n    url: \"https://www.worldometers.info/coronavirus/\",\r\n  });\r\n  const [disableDataSelect, setDisableDataSelect] = useState<boolean>(false);\r\n  const [cntysFetched, setCntysFetched] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    const fetchState = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const r = await axios.get(\r\n          \"https://disease.sh/v3/covid-19/states?sort=cases&allowNull=true\"\r\n        );\r\n        const temp: any[] = r.data;\r\n        const states: State[] = temp.map((state, idx) => ({\r\n          ...state,\r\n          id: idx,\r\n          flag: getUSFlag(state.state),\r\n        }));\r\n\r\n        let names: string[] = [];\r\n        states.forEach((item) => names.push(item.state));\r\n\r\n        fetchStatesHistory(states);\r\n        setStateNames(names);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    const fetchStatesHistory = async (states) => {\r\n      try {\r\n        const r = await axios.get(\r\n          \"https://disease.sh/v3/covid-19/states?sort=cases&yesterday=true&allowNull=true\"\r\n        );\r\n        const stateHist = r.data;\r\n        const temp = states.map((state) => {\r\n          const hist: any = stateHist.find((i) => i.state === state.state);\r\n\r\n          return {\r\n            ...state,\r\n            hist: {\r\n              active: hist?.active,\r\n              cases: hist?.cases,\r\n              deaths: hist?.deaths,\r\n              recovered: hist?.recovered,\r\n              casesPerOneMillion: hist?.casesPerOneMillion,\r\n              deathsPerOneMillion: hist?.deathsPerOneMillion,\r\n              testsPerOneMillion: hist?.testsPerOneMillion,\r\n            },\r\n          };\r\n        });\r\n        setData(temp);\r\n        setStateList(temp);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    const fetchCounties = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const r = await axios.get(\r\n          \"https://disease.sh/v3/covid-19/jhucsse/counties\"\r\n        );\r\n        const temp: any[] = r.data;\r\n        const counties: County[] = temp.map((county, idx) => ({\r\n          ...county,\r\n          hist: {\r\n            confirmed: null,\r\n            deaths: null,\r\n          },\r\n          id: idx,\r\n        }));\r\n\r\n        let names: string[] = [];\r\n\r\n        counties.forEach((item: County) => {\r\n          if (!names.find((name) => name === item.province)) {\r\n            names.push(item.province);\r\n          }\r\n        });\r\n\r\n        setStateNames(names);\r\n        setCountyList(counties);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (stateList.length === 0) {\r\n      fetchState();\r\n      fetchCounties();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchCountiesHistory = async (stateName) => {\r\n      setLoading(true);\r\n      try {\r\n        const r = await axios.get(\r\n          \"https://disease.sh/v3/covid-19/historical/usacounties/\" +\r\n            stateName.toLowerCase() +\r\n            \"?lastdays=2\"\r\n        );\r\n\r\n        let temp = countyList.slice();\r\n\r\n        r.data.forEach((item) => {\r\n          const idx = temp.findIndex(\r\n            (cnty) => cnty.county.toLowerCase() === item.county\r\n          );\r\n\r\n          if (idx !== -1) {\r\n            const confirmed = Object.values(item.timeline.cases)[0];\r\n            const deaths = Object.values(item.timeline.deaths)[0];\r\n\r\n            temp[idx].hist = {\r\n              confirmed: Number(confirmed),\r\n              deaths: Number(deaths),\r\n            };\r\n          }\r\n        });\r\n\r\n        let ctyFetchList = cntysFetched.slice();\r\n        ctyFetchList.push(stateName);\r\n\r\n        setCntysFetched(ctyFetchList);\r\n        setCountyList(temp);\r\n        setData(temp);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    if (stateName === \"All\") {\r\n      setState(undefined);\r\n      setData(stateList);\r\n      setCols(stateTotalCols);\r\n      setDataSource({\r\n        name: \"Worldometers\",\r\n        url: \"https://www.worldometers.info/coronavirus/\",\r\n      });\r\n      setFilterModel({\r\n        items: [],\r\n      });\r\n      setDisableDataSelect(false);\r\n    } else {\r\n      setData([]);\r\n      if (!cntysFetched.find((i) => i === stateName)) {\r\n        fetchCountiesHistory(stateName);\r\n      } else {\r\n        setData(countyList);\r\n      }\r\n      setCols(countyCols);\r\n      setState(stateList.find((item) => item.state === stateName));\r\n      setDataSource({\r\n        name: \"John Hopkins University\",\r\n        url: \"https://coronavirus.jhu.edu/\",\r\n      });\r\n      setFilterModel({\r\n        items: [\r\n          {\r\n            columnField: \"province\",\r\n            operatorValue: \"equals\",\r\n            value: stateName,\r\n          },\r\n        ],\r\n      });\r\n      setDisableDataSelect(true);\r\n    }\r\n  }, [stateName]);\r\n\r\n  useEffect(() => {\r\n    if (dataPerPop) {\r\n      setCols(statePopCols);\r\n    } else {\r\n      setCols(stateTotalCols);\r\n    }\r\n  }, [dataPerPop]);\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={2}>\r\n        <Grid item container spacing={2} xs={12} justifyContent=\"space-between\">\r\n          <Grid item container xs={4}>\r\n            <TableHeader\r\n              setShowPop={setDataPerPop}\r\n              disabled={disableDataSelect}\r\n            />\r\n            <Select\r\n              value={stateName}\r\n              label=\"Select State\"\r\n              sx={styling.select}\r\n              onChange={(event) => setStateName(event.target.value)}\r\n            >\r\n              <MenuItem value=\"All\">All</MenuItem>\r\n              {stateNames &&\r\n                stateNames.map((item) => (\r\n                  <MenuItem value={item} key={item}>\r\n                    {item}\r\n                  </MenuItem>\r\n                ))}\r\n            </Select>\r\n          </Grid>\r\n          {state && (\r\n            <Grid item container xs={8} spacing={2} justifyContent=\"flex-end\">\r\n              <Grid item xs={3} style={{ height: \"auto\" }}>\r\n                <Paper\r\n                  style={styling.paper}\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  <img src={state?.flag} alt=\"\" height=\"85px\" />\r\n                </Paper>\r\n              </Grid>\r\n              <TotalCard\r\n                title=\"Total Cases\"\r\n                value={state?.cases}\r\n                color=\"lightblue\"\r\n                gridWidth={3}\r\n              />\r\n              <TotalCard\r\n                title=\"Total Deaths\"\r\n                value={state?.deaths}\r\n                color=\"lightcoral\"\r\n                gridWidth={3}\r\n              />\r\n              <TotalCard\r\n                title=\"Total Recoveries\"\r\n                value={state?.recovered}\r\n                color=\"lightgreen\"\r\n                gridWidth={3}\r\n              />\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <DataGrid\r\n            rows={data}\r\n            columns={cols}\r\n            loading={loading}\r\n            style={styling.dataGrid}\r\n            sortModel={sortModel}\r\n            onSortModelChange={(model) => setSortModel(model)}\r\n            filterModel={filterModel}\r\n            components={{\r\n              Footer: TableFooter,\r\n            }}\r\n            componentsProps={{\r\n              footer: {\r\n                sourceName: dataSource.name,\r\n                sourceUrl: dataSource.url,\r\n              },\r\n            }}\r\n          />\r\n        </Grid>\r\n        {stateName === \"All\" && <USDataGraph />}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default USStatsPage;\r\n","export const parseData = (input) => {\r\n    const dates: any = Object.keys(input);\r\n    const values: any = Object.values(input);\r\n\r\n    const stats = dates.map((item, idx) => ({\r\n      x: item,\r\n      y: values[idx] / 1000000,\r\n    //   y: values[idx],\r\n    }));\r\n\r\n    return stats;\r\n  }; ","import React, { useState, useEffect } from \"react\";\r\nimport { Grid } from \"@mui/material\";\r\nimport LineGraph from \"./LineGraph\";\r\nimport { parseData } from \"./parseData\";\r\nimport axios from \"axios\";\r\n\r\nfunction GlobalDataGraphs() {\r\n  const [cases, setCases] = useState<any[]>([]);\r\n  const [deaths, setDeaths] = useState<any[]>([]);\r\n\r\n  useEffect(() => {\r\n    const fetchGlobalHistory = async () => {\r\n      try {\r\n        const r = await axios.get(\r\n          \"https://disease.sh/v3/covid-19/historical/all?lastdays=10\"\r\n        );\r\n\r\n        setCases([{ id: \"Cases\", data: parseData(r.data.cases) }]);\r\n        setDeaths([{ id: \"Deaths\", data: parseData(r.data.deaths) }]);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    fetchGlobalHistory();\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item container xs={6} justifyContent=\"center\">\r\n        <LineGraph title={\"Total Cases\"} data={cases} />\r\n      </Grid>\r\n      <Grid item container xs={6} justifyContent=\"center\">\r\n        <LineGraph title={\"Total Deaths\"} data={deaths} />\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default GlobalDataGraphs;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid } from \"@mui/material\";\r\nimport LineGraph from \"./LineGraph\";\r\nimport { parseData } from \"./parseData\";\r\nimport axios from \"axios\";\r\n\r\nfunction CountryDataGraphs({ country }) {\r\n  const [cases, setCases] = useState<any[]>([]);\r\n  const [deaths, setDeaths] = useState<any[]>([]);\r\n\r\n  useEffect(() => {\r\n    const fetchGlobalHistory = async () => {\r\n      try {\r\n        const r = await axios.get(\r\n          \"https://disease.sh/v3/covid-19/historical/\" +\r\n            country +\r\n            \"?lastdays=10\"\r\n        );\r\n\r\n        setCases([{ id: \"Cases\", data: parseData(r.data.timeline.cases) }]);\r\n        setDeaths([{ id: \"Deaths\", data: parseData(r.data.timeline.deaths) }]);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n    if (country !== \"World\") {\r\n      fetchGlobalHistory();\r\n    }\r\n  }, [country]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item container xs={6} justifyContent=\"center\">\r\n        <LineGraph title={\"Total Cases\"} data={cases} />\r\n      </Grid>\r\n      <Grid item container xs={6} justifyContent=\"center\">\r\n        <LineGraph title={\"Total Deaths\"} data={deaths} />\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CountryDataGraphs;\r\n","import { Grid, MenuItem, Select, Paper } from \"@mui/material\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Country, CountryJH } from \"../../scripts/DataInterfaces\";\r\nimport { countryTotalCols, countryPopCols, provinceCols } from \"./StatsCols\";\r\nimport TotalCard from \"../MapPage/components/TotalCard\";\r\nimport GlobalDataGraphs from \"../../Graphs/GlobalDataGraphs\";\r\nimport CountryDataGraphs from \"../../Graphs/CountryDataGraphs\";\r\nimport { TableFooter, TableHeader } from \"../../DataTable/DataTable\";\r\nimport axios from \"axios\";\r\n\r\nconst styling = {\r\n  dataGrid: {\r\n    height: \"700px\",\r\n  },\r\n  select: {\r\n    width: \"100%\",\r\n    color: \"white\",\r\n  },\r\n  paper: {\r\n    padding: \"10px\",\r\n    height: \"100%\",\r\n  },\r\n  flagImg: {\r\n    height: \"70px\",\r\n  },\r\n};\r\n\r\nfunction GlobalStatsPage() {\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [countryList, setCountryList] = useState<Country[]>([]);\r\n  const [provinceList, setProvinceList] = useState<CountryJH[]>([]);\r\n  const [countryName, setCountryName] = useState<string>(\"World\");\r\n  const [country, setCountry] = useState<Country | undefined>(undefined);\r\n  const [data, setData] = useState<Country[] | CountryJH[]>([]);\r\n  const [cols, setCols] = useState<any>(countryTotalCols);\r\n  const [filterModel, setFilterModel] = useState<any>({ items: [] });\r\n  const [countryNames, setCountryNames] = useState<string[]>([]);\r\n  const [sortModel, setSortModel] = useState<any>([\r\n    { field: \"cases\", sort: \"desc\" },\r\n  ]);\r\n  const [dataPerPop, setDataPerPop] = useState<boolean>(false);\r\n  const [dataSource, setDataSource] = useState<any>({\r\n    name: \"Worldometers\",\r\n    url: \"https://www.worldometers.info/coronavirus/\",\r\n  });\r\n  const [disableDataSelect, setDisableDataSelect] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    const fetchCountries = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const r = await axios.get(\r\n          \"https://disease.sh/v3/covid-19/countries?sort=cases&allowNull=true\"\r\n        );\r\n        const temp: any[] = r.data;\r\n        const countries: Country[] = temp.map((country, idx) => ({\r\n          ...country,\r\n          id: idx,\r\n        }));\r\n\r\n        fetchCountriesHistory(countries);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    const fetchCountriesHistory = async (countries) => {\r\n      try {\r\n        const r = await axios.get(\r\n          \"https://disease.sh/v3/covid-19/countries?twoDaysAgo=true&allowNull=true\"\r\n        );\r\n        const countriesHist: Country[] = r.data;\r\n        const temp: Country[] = countries.map((country) => {\r\n          const hist: any = countriesHist.find(\r\n            (i: Country) => i.country === country.country\r\n          );\r\n\r\n          return {\r\n            ...country,\r\n            twoDayHist: {\r\n              active: hist?.active,\r\n              cases: hist?.cases,\r\n              deaths: hist?.deaths,\r\n              recovered: hist?.recovered,\r\n              casesPerOneMillion: hist?.casesPerOneMillion,\r\n              deathsPerOneMillion: hist?.deathsPerOneMillion,\r\n              testsPerOneMillion: hist?.testsPerOneMillion,\r\n            },\r\n          };\r\n        });\r\n        console.log(temp);\r\n        setData(temp);\r\n        setCountryList(temp);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    const fetchProvinceHistory = async (provinces) => {\r\n      try {\r\n        const r = await axios.get(\r\n          \"https://disease.sh/v3/covid-19/historical?lastdays=2\"\r\n        );\r\n\r\n        const provincesHist: any[] = r.data;\r\n        const temp = provinces.map((province) => {\r\n          const hist: any = provincesHist.find(\r\n            (i: any) => i.province === province.province.toLowerCase()\r\n          );\r\n          return {\r\n            ...province,\r\n            twoDayHist: {\r\n              confirmed:\r\n                hist?.timeline.cases[Object.keys(hist?.timeline.cases)[0]],\r\n              deaths:\r\n                hist?.timeline.deaths[Object.keys(hist?.timeline.deaths)[0]],\r\n              recovered:\r\n                hist?.timeline.recovered[ \r\n                  Object.keys(hist?.timeline.recovered)[0]\r\n                ],\r\n            },\r\n          };\r\n        });\r\n\r\n        setProvinceList(temp);\r\n        console.log(\"province hist: \", temp);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    const fetchProvinces = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const r = await axios.get(\"https://disease.sh/v3/covid-19/jhucsse\");\r\n        const temp: any[] = r.data;\r\n        const countries: CountryJH[] = temp.map((country, idx) => ({\r\n          ...country,\r\n          id: idx,\r\n        }));\r\n\r\n        let countryProv: CountryJH[] = [];\r\n        let names: string[] = [];\r\n\r\n        countries.forEach((item: CountryJH) => {\r\n          if (item.province !== null && item.country !== \"US\") {\r\n            countryProv.push(item);\r\n            if (!names.find((name) => name === item.country)) {\r\n              names.push(item.country);\r\n            }\r\n          }\r\n        });\r\n\r\n        setCountryNames(names);\r\n        fetchProvinceHistory(countryProv);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (countryList.length === 0) {\r\n      fetchCountries();\r\n      fetchProvinces();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (countryName === \"World\") {\r\n      setCountry(undefined);\r\n      setData(countryList);\r\n      setCols(countryTotalCols);\r\n      setDataSource({\r\n        name: \"Worldometers\",\r\n        url: \"https://www.worldometers.info/coronavirus/\",\r\n      });\r\n      setFilterModel({\r\n        items: [],\r\n      });\r\n      setDisableDataSelect(false);\r\n    } else {\r\n      setCountry(countryList.find((item) => item.country === countryName));\r\n      setData(provinceList);\r\n      setCols(provinceCols);\r\n      setDataSource({\r\n        name: \"John Hopkins University\",\r\n        url: \"https://coronavirus.jhu.edu/\",\r\n      });\r\n      setFilterModel({\r\n        items: [\r\n          {\r\n            columnField: \"country\",\r\n            operatorValue: \"equals\",\r\n            value: countryName,\r\n          },\r\n        ],\r\n      });\r\n      setDisableDataSelect(true);\r\n    }\r\n  }, [countryName]);\r\n\r\n  useEffect(() => {\r\n    if (dataPerPop) {\r\n      setCols(countryPopCols);\r\n    } else {\r\n      setCols(countryTotalCols);\r\n    }\r\n  }, [dataPerPop]);\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={2}>\r\n        <Grid item container spacing={2} xs={12} justifyContent=\"space-between\">\r\n          <Grid item container xs={4}>\r\n            {/* <Typography variant=\"h4\">Global Statistics</Typography> */}\r\n            <TableHeader\r\n              setShowPop={setDataPerPop}\r\n              disabled={disableDataSelect}\r\n            />\r\n            <Select\r\n              value={countryName}\r\n              label=\"Select Country\"\r\n              sx={styling.select}\r\n              onChange={(event) => {\r\n                setCountryName(event.target.value);\r\n              }}\r\n            >\r\n              <MenuItem value=\"World\">World</MenuItem>\r\n              {countryNames &&\r\n                countryNames.map((item) => (\r\n                  <MenuItem value={item}>{item}</MenuItem>\r\n                ))}\r\n            </Select>\r\n          </Grid>\r\n          {country && (\r\n            <Grid item container xs={8} spacing={2} justifyContent=\"flex-end\">\r\n              <Grid item xs={3} style={{ height: \"120px\" }}>\r\n                <Paper style={styling.paper}>\r\n                  <img\r\n                    src={country?.countryInfo.flag}\r\n                    alt=\"\"\r\n                    style={styling.flagImg}\r\n                  />\r\n                </Paper>\r\n              </Grid>\r\n              <TotalCard\r\n                title=\"Total Cases\"\r\n                value={country?.cases}\r\n                color=\"lightblue\"\r\n                gridWidth={3}\r\n              />\r\n              <TotalCard\r\n                title=\"Total Recovered\"\r\n                value={country?.recovered}\r\n                color=\"lightgreen\"\r\n                gridWidth={3}\r\n              />\r\n              <TotalCard\r\n                title=\"Total Deaths\"\r\n                value={country?.deaths}\r\n                color=\"lightcoral\"\r\n                gridWidth={3}\r\n              />\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <DataGrid\r\n            rows={data}\r\n            columns={cols}\r\n            loading={loading}\r\n            style={styling.dataGrid}\r\n            sortModel={sortModel}\r\n            onSortModelChange={(model) => setSortModel(model)}\r\n            filterModel={filterModel}\r\n            components={{\r\n              Footer: TableFooter,\r\n            }}\r\n            componentsProps={{\r\n              footer: {\r\n                sourceName: dataSource.name,\r\n                sourceUrl: dataSource.url,\r\n              },\r\n            }}\r\n          />\r\n        </Grid>\r\n        {country ? (\r\n          <CountryDataGraphs country={countryName} />\r\n        ) : (\r\n          <GlobalDataGraphs />\r\n        )}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GlobalStatsPage;\r\n","import React, { useState } from \"react\";\r\nimport { ResponsiveChoroplethCanvas } from \"@nivo/geo\";\r\nimport { Grid, Slider, Paper, Button, Typography } from \"@mui/material\";\r\n\r\nfunction MapChart({ data, mapConfig }) {\r\n  const defaultX = 0.5;\r\n  const defaultY = mapConfig.y;\r\n  const defaultProj = mapConfig.proj.min;\r\n  const [projScale, setProjScale] = useState<any>(mapConfig.proj.min);\r\n  const [x, setX] = useState<any>(defaultX);\r\n  const [y, setY] = useState<any>(defaultY);\r\n\r\n  const styling = {\r\n    grid: {\r\n      height: \"580px\",\r\n      width: \"100%\",\r\n    },\r\n    paper: {\r\n      height: \"600px\",\r\n      width: \"100%\",\r\n      color: \"black\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item container xs={12} spacing={1}>\r\n        <Grid item container xs={12}>\r\n          <Paper style={styling.paper}>\r\n            <Grid item xs={12} style={styling.grid}>\r\n              <ResponsiveChoroplethCanvas\r\n                data={data}\r\n                features={mapConfig.features}\r\n                margin={{ top: 0, right: 0, bottom: 0, left: 0 }}\r\n                colors={mapConfig.colors}\r\n                domain={mapConfig.domain}\r\n                unknownColor=\"#8c8c8c\"\r\n                label={mapConfig.label}\r\n                valueFormat=\".2s\"\r\n                projectionTranslation={[x, y]}\r\n                projectionRotation={[0, 0, 0]}\r\n                projectionScale={projScale}\r\n                enableGraticule={true}\r\n                graticuleLineColor=\"rgba(0, 0, 0, .2)\"\r\n                borderWidth={0.5}\r\n                borderColor=\"#000000\"\r\n                legends={[\r\n                  {\r\n                    anchor: \"bottom-left\",\r\n                    direction: \"column\",\r\n                    justify: true,\r\n                    translateX: 20,\r\n                    translateY: -60,\r\n                    itemsSpacing: 0,\r\n                    itemWidth: 92,\r\n                    itemHeight: 18,\r\n                    itemDirection: \"left-to-right\",\r\n                    itemOpacity: 0.85,\r\n                    symbolSize: 18,\r\n                  },\r\n                ]}\r\n                theme={{\r\n                  background: \"transparent\",\r\n                  textColor: \"white\",\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item container xs={12}>\r\n          <Paper style={{width: \"100%\", padding: \"10px\"}}>\r\n            <Grid item container xs={12} alignItems=\"center\" justifyContent=\"space-around\">\r\n              <Grid item container xs={3}>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"button\">Zoom:</Typography>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Slider\r\n                    value={projScale}\r\n                    step={10}\r\n                    min={mapConfig.proj.min}\r\n                    max={mapConfig.proj.max}\r\n                    onChange={(event, value) => setProjScale(value)}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={3}>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"button\">Move X:</Typography>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Slider\r\n                    value={x}\r\n                    step={0.1}\r\n                    track=\"inverted\"\r\n                    min={-1}\r\n                    max={1}\r\n                    onChange={(event, value) => setX(value)}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={3}>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"button\">Move Y:</Typography>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Slider\r\n                    value={y}\r\n                    step={0.1}\r\n                    min={-1}\r\n                    max={1}\r\n                    onChange={(event, value) => setY(value)}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={1}>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  onClick={() => {\r\n                    setX(defaultX);\r\n                    setY(defaultY);\r\n                    setProjScale(defaultProj);\r\n                  }}\r\n                >\r\n                  Reset\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default MapChart;\r\n","import React, { useState } from \"react\";\r\nimport { Grid } from \"@mui/material\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { TableFooter } from \"../../../DataTable/DataTable\";\r\n\r\nfunction SummaryList({ data, loading, columns }) {\r\n  const [sortModel, setSortModel] = useState<any[]>([\r\n    { field: \"value\", sort: \"desc\" },\r\n  ]);\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12} style={{ width: \"100%\", height: \"100%\" }}>\r\n        <DataGrid\r\n          sortModel={sortModel}\r\n          onSortModelChange={(model) => setSortModel(model)}\r\n          columns={columns}\r\n          rows={data}\r\n          loading={loading}\r\n          style={{ width: \"100%\", height: \"100%\" }}\r\n          density=\"compact\"\r\n          components={{\r\n            Footer: TableFooter,\r\n          }}\r\n          componentsProps={{\r\n            footer: {\r\n              sourceName: \"Worldometers\",\r\n              sourceUrl: \"https://www.worldometers.info/coronavirus/\",\r\n            },\r\n          }}\r\n        />\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default SummaryList;\r\n","import {\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  ToggleButton,\r\n  ToggleButtonGroup,\r\n} from \"@mui/material\";\r\nimport MapChart from \"./components/MapChart\";\r\nimport SummaryList from \"./components/SummaryList\";\r\nimport TotalCard from \"./components/TotalCard\";\r\n\r\nfunction MapPage({\r\n  totals,\r\n  view,\r\n  setView,\r\n  title,\r\n  data,\r\n  loading,\r\n  cols,\r\n  mapConfig,\r\n}) {\r\n  return (\r\n    <div>\r\n      <Grid item container spacing={2} justifyContent=\"space-evenly\">\r\n        {totals && <Grid item xs={12}>Updated: {new Date(totals.updated).toUTCString()}</Grid>}\r\n        {totals && (\r\n          <Grid\r\n            item\r\n            container\r\n            className=\"totalsContainer\"\r\n            xs={12}\r\n            spacing={2}\r\n            justifyContent=\"space-evenly\"\r\n          >\r\n            <TotalCard\r\n              title=\"Total Cases\"\r\n              value={totals.cases}\r\n              color=\"lightblue\"\r\n              gridWidth={3}\r\n            />\r\n            <TotalCard\r\n              title=\"Total Recoveries\"\r\n              value={totals.recovered}\r\n              color=\"lightgreen\"\r\n              gridWidth={3}\r\n            />\r\n            <TotalCard\r\n              title=\"Total Deaths\"\r\n              value={totals.deaths}\r\n              color=\"lightcoral\"\r\n              gridWidth={3}\r\n            />\r\n            <TotalCard\r\n              title=\"Total Tests\"\r\n              value={totals.tests}\r\n              color=\"khaki\"\r\n              gridWidth={3}\r\n            />\r\n          </Grid>\r\n        )}\r\n        <Grid item xs={3}>\r\n          <Typography variant=\"h4\" align=\"center\">\r\n            {title}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={9}>\r\n          <ToggleButtonGroup\r\n            value={view}\r\n            exclusive\r\n            onChange={(e, value) => setView(value)}\r\n          >\r\n            <ToggleButton value=\"cases\">Confirmed</ToggleButton>\r\n            <ToggleButton value=\"active\">Active</ToggleButton>\r\n            <ToggleButton value=\"recovered\">Recovered</ToggleButton>\r\n            <ToggleButton value=\"deaths\">Deaths</ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Grid>\r\n        <Grid item xs={3} style={{ width: \"100%\", height: \"680px\" }}>\r\n          <Paper style={{ height: \"100%\" }}>\r\n            <SummaryList data={data} loading={loading} columns={cols} />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item container xs={9} spacing={2}>\r\n          <MapChart data={data} mapConfig={mapConfig} />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapPage;\r\n","import { useEffect, useState } from \"react\";\r\nimport MapPage from \"./MapPage\";\r\nimport { Grid } from \"@mui/material\";\r\nimport {\r\n  Country,\r\n  CountryMapItem,\r\n  DataTotal,\r\n} from \"../../scripts/DataInterfaces\";\r\nimport feats from \"./MapFeatures/world_countries.json\";\r\nimport axios from \"axios\";\r\n\r\nfunction GlobalMapPage() {\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [countries, setCountries] = useState<Country[]>([]);\r\n  const [confirmedCases, setConfirmedCases] = useState<CountryMapItem[]>([]);\r\n  const [activeCases, setActiveCases] = useState<CountryMapItem[]>([]);\r\n  const [recoveredCases, setRecoveredCases] = useState<CountryMapItem[]>([]);\r\n  const [deathsCases, setDeathsCases] = useState<CountryMapItem[]>([]);\r\n  const [view, setView] = useState<String>(\"cases\");\r\n  const [title, setTitle] = useState<string>(\"Confirmed Cases\");\r\n  const [data, setData] = useState<CountryMapItem[]>([]);\r\n  const [totals, setTotals] = useState<DataTotal>();\r\n  const [mapDomain, setMapDomain] = useState<number[]>([0,1000000]);\r\n\r\n  const columns = [\r\n    {\r\n      field: \"flag\",\r\n      headerName: \"\",\r\n      flex: 0.5,\r\n      valueGetter: (params) => {\r\n        return params.row.flag;\r\n      },\r\n      renderCell: (params) => {\r\n        return <img src={params.row.flag} alt=\"\" style={{ height: \"20px\" }} />;\r\n      },\r\n    },\r\n    {\r\n      field: \"country\",\r\n      headerName: \"Country\",\r\n      flex: 1,\r\n    },\r\n    {\r\n      field: \"value\",\r\n      headerName: \"Total\",\r\n      flex: 1,\r\n      type: \"number\",\r\n    },\r\n  ];\r\n\r\n  const getMax = (arr) => {\r\n    let max = 0;\r\n    for(let i = 0; i < arr.length; i++) {\r\n      if (arr[i].value > max) {\r\n        max = arr[i].value;\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchCountries = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const r = await axios.get(\"https://disease.sh/v3/covid-19/countries\");\r\n        const temp: any[] = r.data;\r\n        const countryList: Country[] = temp.map((country, idx) => ({\r\n          ...country,\r\n          id: idx,\r\n        }));\r\n\r\n        setCountries(countryList);\r\n\r\n        const tempCountries = countryList.map((country: Country) => ({\r\n          id: country.countryInfo.iso3\r\n            ? country.countryInfo.iso3\r\n            : country.country,\r\n          value: country.cases,\r\n          country: country.country,\r\n          flag: country.countryInfo.flag,\r\n        }));\r\n\r\n        setMapDomain([0, getMax(tempCountries)]);\r\n        setData(tempCountries);\r\n        setConfirmedCases(\r\n          countryList.map((country: Country) => ({\r\n            id: country.countryInfo.iso3\r\n              ? country.countryInfo.iso3\r\n              : country.country,\r\n            value: country.cases,\r\n            country: country.country,\r\n            flag: country.countryInfo.flag,\r\n          }))\r\n        );\r\n        setActiveCases(\r\n          countryList.map((country: Country) => ({\r\n            id: country.countryInfo.iso3\r\n              ? country.countryInfo.iso3\r\n              : country.country,\r\n            value: country.active,\r\n            country: country.country,\r\n            flag: country.countryInfo.flag,\r\n          }))\r\n        );\r\n        setRecoveredCases(\r\n          countryList.map((country: Country) => ({\r\n            id: country.countryInfo.iso3\r\n              ? country.countryInfo.iso3\r\n              : country.country,\r\n            value: country.recovered,\r\n            country: country.country,\r\n            flag: country.countryInfo.flag,\r\n          }))\r\n        );\r\n        setDeathsCases(\r\n          countryList.map((country: Country) => ({\r\n            id: country.countryInfo.iso3\r\n              ? country.countryInfo.iso3\r\n              : country.country,\r\n            value: country.deaths,\r\n            country: country.country,\r\n            flag: country.countryInfo.flag,\r\n          }))\r\n        );\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    const fetchTotals = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const r = await axios.get(\"https://disease.sh/v3/covid-19/all\");\r\n        const totalItem: DataTotal = r.data;\r\n\r\n        setTotals(totalItem);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (countries.length === 0) {\r\n      fetchCountries();\r\n    }\r\n\r\n    if (!totals) {\r\n      fetchTotals();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (view === \"cases\") {\r\n      setTitle(\"Confirmed Cases\");\r\n      setData(confirmedCases);\r\n      setMapDomain([0, getMax(confirmedCases)]);\r\n    } else if (view === \"active\") {\r\n      setTitle(\"Active Cases\");\r\n      setData(activeCases);\r\n      setMapDomain([0, getMax(activeCases)]);\r\n    } else if (view === \"recovered\") {\r\n      setTitle(\"Recovered Cases\");\r\n      setData(recoveredCases);\r\n      setMapDomain([0, getMax(recoveredCases)]);\r\n    } else if (view === \"deaths\") {\r\n      setTitle(\"Deaths\");\r\n      setData(deathsCases);\r\n      setMapDomain([0, getMax(deathsCases)]);\r\n    }\r\n  }, [view]);\r\n\r\n  return (\r\n    <div>\r\n      <Grid container>\r\n        <Grid item>\r\n          <MapPage\r\n            totals={totals}\r\n            view={view}\r\n            setView={setView}\r\n            title={title}\r\n            data={data}\r\n            loading={loading}\r\n            cols={columns}\r\n            mapConfig={{\r\n              proj: {\r\n                min: 125,\r\n                max: 600,\r\n              },\r\n              y: 0.63,\r\n              features: feats.features,\r\n              label: \"properties.name\",\r\n              colors: \"YlOrRd\",\r\n              domain: mapDomain\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GlobalMapPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MapPage from \"./MapPage\";\r\nimport { State, StateMapItem, Country } from \"../../scripts/DataInterfaces\";\r\nimport { getUSFlag } from \"../../scripts/USFlagMatch\";\r\nimport feats from \"./MapFeatures/us_states_albers.json\";\r\nimport axios from \"axios\";\r\n\r\nfunction USMapPage() {\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [view, setView] = useState<String>(\"cases\");\r\n  const [title, setTitle] = useState<string>(\"Confirmed Cases\");\r\n  const [data, setData] = useState<StateMapItem[]>([]);\r\n  const [totals, setTotals] = useState<Country>();\r\n  const [states, setStates] = useState<State[]>([]);\r\n  const [confirmedCases, setConfirmedCases] = useState<StateMapItem[]>([]);\r\n  const [activeCases, setActiveCases] = useState<StateMapItem[]>([]);\r\n  const [recoveredCases, setRecoveredCases] = useState<StateMapItem[]>([]);\r\n  const [deathsCases, setDeathsCases] = useState<StateMapItem[]>([]);\r\n  const [mapDomain, setMapDomain] = useState<number[]>([0,1000000]);\r\n\r\n  const columns = [\r\n    {\r\n      field: \"flag\",\r\n      headerName: \"\",\r\n      flex: 0.5,\r\n      valueGetter: (params) => {\r\n        return params.row.flag;\r\n      },\r\n      renderCell: (params) => {\r\n        return <img src={params.row.flag} alt=\"\" height=\"20px\" />;\r\n      },\r\n    },\r\n    {\r\n      field: \"state\",\r\n      headerName: \"State\",\r\n      flex: 1,\r\n    },\r\n    {\r\n      field: \"value\",\r\n      headerName: \"Total\",\r\n      flex: 1,\r\n      type: \"number\",\r\n    },\r\n  ];\r\n\r\n  const getMax = (arr) => {\r\n    let max = 0;\r\n    for(let i = 0; i < arr.length; i++) {\r\n      if (arr[i].value > max) {\r\n        max = arr[i].value;\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchStates = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const r = await axios.get(\"https://disease.sh/v3/covid-19/states\");\r\n        const temp: any[] = r.data;\r\n        const stateList: State[] = temp.map((state, idx) => ({\r\n            ...state,\r\n            id: idx,\r\n            flag: getUSFlag(state.state),\r\n          }\r\n        ));\r\n\r\n        const tempStates = stateList.map((state: any) => ({\r\n          id: state.state,\r\n          value: state.cases,\r\n          state: state.state,\r\n          flag: state.flag\r\n        }));\r\n\r\n        setMapDomain([0, getMax(tempStates)]);\r\n        setData(tempStates);\r\n        setConfirmedCases(\r\n          stateList.map((state: any) => ({\r\n            id: state.state,\r\n            value: state.cases,\r\n            state: state.state,\r\n            flag: state.flag\r\n          }))\r\n        );\r\n        setActiveCases(\r\n          stateList.map((state: any) => ({\r\n            id: state.state,\r\n            value: state.active,\r\n            state: state.state,\r\n            flag: state.flag\r\n          }))\r\n        );\r\n        setRecoveredCases(\r\n          stateList.map((state: any) => ({\r\n            id: state.state,\r\n            value: state.recovered,\r\n            state: state.state,\r\n            flag: state.flag\r\n          }))\r\n        );\r\n        setDeathsCases(\r\n          stateList.map((state: any) => ({\r\n            id: state.state,\r\n            value: state.deaths,\r\n            state: state.state,\r\n            flag: state.flag\r\n          }))\r\n        );\r\n\r\n        setStates(stateList);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error(err);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    const fetchTotals = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const r = await axios.get(\r\n          \"https://disease.sh/v3/covid-19/countries/USA?strict=true\"\r\n        );\r\n        const totalItem: Country = r.data;\r\n\r\n        setTotals(totalItem);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (states.length === 0) {\r\n      fetchStates();\r\n    }\r\n    if (!totals) {\r\n      fetchTotals();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (view === \"cases\") {\r\n      setTitle(\"Confirmed Cases\");\r\n      setData(confirmedCases);\r\n      setMapDomain([0, getMax(confirmedCases)]);\r\n    } else if (view === \"active\") {\r\n      setTitle(\"Active Cases\");\r\n      setData(activeCases);\r\n      setMapDomain([0, getMax(activeCases)]);\r\n    } else if (view === \"recovered\") {\r\n      setTitle(\"Recovered Cases\");\r\n      setData(recoveredCases);\r\n      setMapDomain([0, getMax(recoveredCases)]);\r\n    } else if (view === \"deaths\") {\r\n      setTitle(\"Deaths\");\r\n      setData(deathsCases);\r\n      setMapDomain([0, getMax(deathsCases)]);\r\n    }\r\n  }, [view]);\r\n\r\n  return (\r\n    <div>\r\n      <MapPage\r\n        totals={totals}\r\n        view={view}\r\n        setView={setView}\r\n        title={title}\r\n        data={data}\r\n        loading={loading}\r\n        cols={columns}\r\n        mapConfig={{\r\n          proj: {\r\n            min: 350,\r\n            max: 600,\r\n          },\r\n          y: 0.5,\r\n          features: feats.features,\r\n          label: \"properties.state_name\",\r\n          colors: \"YlOrRd\",\r\n          domain: mapDomain\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default USMapPage;\r\n","import { useState } from \"react\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport TotalCard from \"../MapPage/components/TotalCard\";\r\nimport MapChart from \"../MapPage/components/MapChart\";\r\nimport LineGraph from \"../../Graphs/LineGraph\";\r\nimport { TableFooter } from \"../../DataTable/DataTable\";\r\n\r\nfunction VaccinesPage({\r\n  totals,\r\n  tableCols,\r\n  tableData,\r\n  mapData,\r\n  timeline,\r\n  mapConfig,\r\n}) {\r\n  const [sortModel, setSortModel] = useState<any[]>([\r\n    { field: \"total\", sort: \"desc\" },\r\n  ]);\r\n  const date = new Date();\r\n  return (\r\n    <div>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Typography>Updated: {date.toUTCString()}</Typography>\r\n        </Grid>\r\n        <Grid item container xs={12} spacing={2}>\r\n          {totals && (\r\n            <Grid item container xs={3} spacing={2} sx={{ height: \"170px\" }}>\r\n              <TotalCard\r\n                title=\"Total Administered\"\r\n                value={totals.total}\r\n                color=\"lightgreen\"\r\n                gridWidth={12}\r\n              />\r\n              <TotalCard\r\n                title=\"Total Administered (per hundred)\"\r\n                value={totals.totalPerHundred}\r\n                color=\"lightgreen\"\r\n                gridWidth={12}\r\n              />\r\n              <TotalCard\r\n                title=\"Administered Today\"\r\n                value={totals.daily}\r\n                color=\"lightblue\"\r\n                gridWidth={12}\r\n              />\r\n              <TotalCard\r\n                title=\"Administered Today (per million)\"\r\n                value={totals.dailyPerMillion}\r\n                color=\"lightblue\"\r\n                gridWidth={12}\r\n              />\r\n            </Grid>\r\n          )}\r\n          <Grid item container xs={9}>\r\n            <MapChart data={mapData} mapConfig={mapConfig} />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={7}>\r\n          <DataGrid\r\n            rows={tableData}\r\n            columns={tableCols}\r\n            sortModel={sortModel}\r\n            onSortModelChange={(model) => setSortModel(model)}\r\n            components={{\r\n              Footer: TableFooter,\r\n            }}\r\n            componentsProps={{\r\n              footer: {\r\n                sourceName: \"RAPS\",\r\n                sourceUrl:\r\n                  \"https://www.raps.org/news-and-articles/news-articles/2020/3/covid-19-vaccine-tracker\",\r\n              },\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item container xs={5}>\r\n          <LineGraph\r\n            title=\"Total Administered (10 Day Period)\"\r\n            data={timeline}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VaccinesPage;\r\n","export function getCountryISO3(name) {\r\n    const countries = [\r\n        { code: \"AFG\", name: \"Afghanistan\" },\r\n        { code: \"ALB\", name: \"Albania\" },\r\n        { code: \"DZA\", name: \"Algeria\" },\r\n        { code: \"AND\", name: \"Andorra\" },\r\n        { code: \"AGO\", name: \"Angola\" },\r\n        { code: \"AIA\", name: \"Anguilla\" },\r\n        { code: \"ATG\", name: \"Antigua and Barbuda\" },\r\n        { code: \"ARG\", name: \"Argentina\" },\r\n        { code: \"ARM\", name: \"Armenia\" },\r\n        { code: \"ABW\", name: \"Aruba\" },\r\n        { code: \"AUS\", name: \"Australia\" },\r\n        { code: \"AUT\", name: \"Austria\" },\r\n        { code: \"AZE\", name: \"Azerbaijan\" },\r\n        { code: \"BHS\", name: \"Bahamas\" },\r\n        { code: \"BHR\", name: \"Bahrain\" },\r\n        { code: \"BGD\", name: \"Bangladesh\" },\r\n        { code: \"BRB\", name: \"Barbados\" },\r\n        { code: \"BLR\", name: \"Belarus\" },\r\n        { code: \"BEL\", name: \"Belgium\" },\r\n        { code: \"BEN\", name: \"Benin\" },\r\n        { code: \"BMU\", name: \"Bermuda\" },\r\n        { code: \"BTN\", name: \"Bhutan\" },\r\n        { code: \"BOL\", name: \"Bolivia\" },\r\n        { code: \"NL-BQ3\", name: \"Caribbean Netherlands\" },\r\n        { code: \"BIH\", name: \"Bosnia\" },\r\n        { code: \"BWA\", name: \"Botswana\" },\r\n        { code: \"BRA\", name: \"Brazil\" },\r\n        { code: \"VGB\", name: \"British Virgin Islands\" },\r\n        { code: \"BRN\", name: \"Brunei\" },\r\n        { code: \"BGR\", name: \"Bulgaria\" },\r\n        { code: \"BFA\", name: \"Burkina Faso\" },\r\n        { code: \"BDI\", name: \"Burundi\" },\r\n        { code: \"KHM\", name: \"Cambodia\" },\r\n        { code: \"CMR\", name: \"Cameroon\" },\r\n        { code: \"CAN\", name: \"Canada\" },\r\n        { code: \"CPV\", name: \"Cabo Verde\" },\r\n        { code: \"CYM\", name: \"Cayman Islands\" },\r\n        { code: \"CAF\", name: \"Central African Republic\" },\r\n        { code: \"TCD\", name: \"Chad\" },\r\n        { code: \"CHL\", name: \"Chile\" },\r\n        { code: \"CHN\", name: \"China\" },\r\n        { code: \"COL\", name: \"Colombia\" },\r\n        { code: \"COM\", name: \"Comoros\" },\r\n        { code: \"COG\", name: \"Congo\" },\r\n        { code: \"COK\", name: \"Cook Islands\" },\r\n        { code: \"CRI\", name: \"Costa Rica\" },\r\n        { code: \"CIV\", name: \"Côte d'Ivoire\" },\r\n        { code: \"HRV\", name: \"Croatia\" },\r\n        { code: \"CUB\", name: \"Cuba\" },\r\n        { code: \"CUW\", name: \"Curaçao\" },\r\n        { code: \"CYP\", name: \"Cyprus\" },\r\n        { code: \"CZE\", name: \"Czechia\" },\r\n        { code: \"COD\", name: \"DRC\" },\r\n        { code: \"DNK\", name: \"Denmark\" },\r\n        { code: \"DJI\", name: \"Djibouti\" },\r\n        { code: \"DMA\", name: \"Dominica\" },\r\n        { code: \"DOM\", name: \"Dominican Republic\" },\r\n        { code: \"ECU\", name: \"Ecuador\" },\r\n        { code: \"EGY\", name: \"Egypt\" },\r\n        { code: \"SLV\", name: \"El Salvador\" },\r\n        { code: \"GNQ\", name: \"Equatorial Guinea\" },\r\n        { code: \"EST\", name: \"Estonia\" },\r\n        { code: \"SWZ\", name: \"Swaziland\" },\r\n        { code: \"ETH\", name: \"Ethiopia\" },\r\n        { code: \"FRO\", name: \"Faroe Islands\" },\r\n        { code: \"FLK\", name: \"Falkland Islands (Malvinas)\" },\r\n        { code: \"FIN\", name: \"Finland\" },\r\n        { code: \"FJI\", name: \"Fiji\" },\r\n        { code: \"FRA\", name: \"France\" },\r\n        { code: \"ALA\", name: \"Åland Islands\" },\r\n        { code: \"ARE\", name: \"United Arab Emirates\" },\r\n        { code: \"ASM\", name: \"American Samoa\" },\r\n        { code: \"ATA\", name: \"Antarctica\" },\r\n        { code: \"ATF\", name: \"French Southern Territories\" },\r\n        { code: \"BES\", name: \"Bonaire, Sint Eustatius and Saba\" },\r\n        { code: \"BLM\", name: \"Saint Barthélemy\" },\r\n        { code: \"BLZ\", name: \"Belize\" },\r\n        { code: \"BVT\", name: \"Bouvet Island\" },\r\n        { code: \"CCK\", name: \"Cocos (Keeling) Islands\" },\r\n        { code: \"CHE\", name: \"Switzerland\" },\r\n        { code: \"CXR\", name: \"Christmas Island\" },\r\n        { code: \"DEU\", name: \"Germany\" },\r\n        { code: \"DZA\", name: \"Algeria\" },\r\n        { code: \"ERI\", name: \"Eritrea\" },\r\n        { code: \"ESH\", name: \"Western Sahara\" },\r\n        { code: \"ESP\", name: \"Spain\" },\r\n        { code: \"FSM\", name: \"Micronesia (Federated States of)\" },\r\n        { code: \"GAB\", name: \"Gabon\" },\r\n        { code: \"GBR\", name: \"UK\" },\r\n        { code: \"GEO\", name: \"Georgia\" },\r\n        { code: \"GGY\", name: \"Guernsey\" },\r\n        { code: \"GHA\", name: \"Ghana\" },\r\n        { code: \"GIB\", name: \"Gibraltar\" },\r\n        { code: \"GIN\", name: \"Guinea\" },\r\n        { code: \"GLP\", name: \"Guadeloupe\" },\r\n        { code: \"GMB\", name: \"Gambia\" },\r\n        { code: \"GNB\", name: \"Guinea-Bissau\" },\r\n        { code: \"GRC\", name: \"Greece\" },\r\n        { code: \"GRD\", name: \"Grenada\" },\r\n        { code: \"GRL\", name: \"Greenland\" },\r\n        { code: \"GTM\", name: \"Guatemala\" },\r\n        { code: \"GUF\", name: \"French Guiana\" },\r\n        { code: \"GUM\", name: \"Guam\" },\r\n        { code: \"GUY\", name: \"Guyana\" },\r\n        { code: \"HKG\", name: \"Hong Kong\" },\r\n        { code: \"HMD\", name: \"Heard Island and McDonald Islands\" },\r\n        { code: \"HND\", name: \"Honduras\" },\r\n        { code: \"HTI\", name: \"Haiti\" },\r\n        { code: \"HUN\", name: \"Hungary\" },\r\n        { code: \"IDN\", name: \"Indonesia\" },\r\n        { code: \"IMN\", name: \"Isle of Man\" },\r\n        { code: \"IND\", name: \"India\" },\r\n        { code: \"IOT\", name: \"British Indian Ocean Territory\" },\r\n        { code: \"IRL\", name: \"Ireland\" },\r\n        { code: \"IRN\", name: \"Iran\" },\r\n        { code: \"IRQ\", name: \"Iraq\" },\r\n        { code: \"ISL\", name: \"Iceland\" },\r\n        { code: \"ISR\", name: \"Israel\" },\r\n        { code: \"ITA\", name: \"Italy\" },\r\n        { code: \"JAM\", name: \"Jamaica\" },\r\n        { code: \"JEY\", name: \"Jersey\" },\r\n        { code: \"JOR\", name: \"Jordan\" },\r\n        { code: \"JPN\", name: \"Japan\" },\r\n        { code: \"KAZ\", name: \"Kazakhstan\" },\r\n        { code: \"KEN\", name: \"Kenya\" },\r\n        { code: \"KGZ\", name: \"Kyrgyzstan\" },        \r\n        { code: \"KIR\", name: \"Kiribati\" },\r\n        { code: \"KNA\", name: \"Saint Kitts and Nevis\" },\r\n        { code: \"KOR\", name: \"S. Korea\" },\r\n        { code: \"KWT\", name: \"Kuwait\" },\r\n        { code: \"LAO\", name: \"Lao People's Democratic Republic\" },\r\n        { code: \"LBN\", name: \"Lebanon\" },\r\n        { code: \"LBR\", name: \"Liberia\" },\r\n        { code: \"LBY\", name: \"Libyan Arab Jamahiriya\" },\r\n        { code: \"LCA\", name: \"Saint Lucia\" },\r\n        { code: \"LIE\", name: \"Liechtenstein\" },\r\n        { code: \"LKA\", name: \"Sri Lanka\" },\r\n        { code: \"LSO\", name: \"Lesotho\" },\r\n        { code: \"LTU\", name: \"Lithuania\" },\r\n        { code: \"LUX\", name: \"Luxembourg\" },\r\n        { code: \"LVA\", name: \"Latvia\" },\r\n        { code: \"MAC\", name: \"Macao\" },\r\n        { code: \"MAF\", name: \"Saint Martin (French part)\" },\r\n        { code: \"MAR\", name: \"Morocco\" },\r\n        { code: \"MCO\", name: \"Monaco\" },\r\n        { code: \"MDA\", name: \"Moldova\" },\r\n        { code: \"MDG\", name: \"Madagascar\" },\r\n        { code: \"MDV\", name: \"Maldives\" },\r\n        { code: \"MEX\", name: \"Mexico\" },\r\n        { code: \"MHL\", name: \"Marshall Islands\" },\r\n        { code: \"MKD\", name: \"Macedonia\" },\r\n        { code: \"MLI\", name: \"Mali\" },\r\n        { code: \"MLT\", name: \"Malta\" },\r\n        { code: \"MMR\", name: \"Myanmar\" },\r\n        { code: \"MNE\", name: \"Montenegro\" },\r\n        { code: \"MNG\", name: \"Mongolia\" },\r\n        { code: \"MNP\", name: \"Northern Mariana Islands\" },\r\n        { code: \"MOZ\", name: \"Mozambique\" },\r\n        { code: \"MRT\", name: \"Mauritania\" },\r\n        { code: \"MSR\", name: \"Montserrat\" },\r\n        { code: \"MTQ\", name: \"Martinique\" },\r\n        { code: \"MUS\", name: \"Mauritius\" },\r\n        { code: \"MWI\", name: \"Malawi\" },\r\n        { code: \"MYS\", name: \"Malaysia\" },\r\n        { code: \"MYT\", name: \"Mayotte\" },\r\n        { code: \"NAM\", name: \"Namibia\" },\r\n        { code: \"NCL\", name: \"New Caledonia\" },\r\n        { code: \"NER\", name: \"Niger\" },\r\n        { code: \"NFK\", name: \"Norfolk Island\" },\r\n        { code: \"NGA\", name: \"Nigeria\" },\r\n        { code: \"NIC\", name: \"Nicaragua\" },\r\n        { code: \"NIU\", name: \"Niue\" },\r\n        { code: \"NLD\", name: \"Netherlands\" },\r\n        { code: \"NOR\", name: \"Norway\" },\r\n        { code: \"NPL\", name: \"Nepal\" },\r\n        { code: \"NRU\", name: \"Nauru\" },\r\n        { code: \"NZL\", name: \"New Zealand\" },\r\n        { code: \"OMN\", name: \"Oman\" },\r\n        { code: \"PAK\", name: \"Pakistan\" },\r\n        { code: \"PAN\", name: \"Panama\" },\r\n        { code: \"PCN\", name: \"Pitcairn\" },\r\n        { code: \"PER\", name: \"Peru\" },\r\n        { code: \"PHL\", name: \"Philippines\" },\r\n        { code: \"PLW\", name: \"Palau\" },\r\n        { code: \"PNG\", name: \"Papua New Guinea\" },\r\n        { code: \"POL\", name: \"Poland\" },\r\n        { code: \"PRI\", name: \"Puerto Rico\" },\r\n        { code: \"PRK\", name: \"Korea\" },\r\n        { code: \"PRT\", name: \"Portugal\" },\r\n        { code: \"PRY\", name: \"Paraguay\" },\r\n        { code: \"PSE\", name: \"Palestine\" },\r\n        { code: \"PYF\", name: \"French Polynesia\" },\r\n        { code: \"QAT\", name: \"Qatar\" },\r\n        { code: \"REU\", name: \"Réunion\" },\r\n        { code: \"ROU\", name: \"Romania\" },\r\n        { code: \"RUS\", name: \"Russia\" },\r\n        { code: \"RWA\", name: \"Rwanda\" },\r\n        { code: \"SAU\", name: \"Saudi Arabia\" },\r\n        { code: \"SDN\", name: \"Sudan\" },\r\n        { code: \"SEN\", name: \"Senegal\" },\r\n        { code: \"SGP\", name: \"Singapore\" },\r\n        { code: \"SGS\", name: \"South Georgia and the South Sandwich Islands\" },\r\n        { code: \"SHN\", name: \"Saint Helena, Ascension and Tristan da Cunha\" },\r\n        { code: \"SJM\", name: \"Svalbard and Jan Mayen\" },\r\n        { code: \"SLB\", name: \"Solomon Islands\" },\r\n        { code: \"SLE\", name: \"Sierra Leone\" },        \r\n        { code: \"SMR\", name: \"San Marino\" },\r\n        { code: \"SOM\", name: \"Somalia\" },\r\n        { code: \"SPM\", name: \"Saint Pierre and Miquelon\" },\r\n        { code: \"SRB\", name: \"Serbia\" },\r\n        { code: \"SDS\", name: \"South Sudan\"},\r\n        { code: \"STP\", name: \"Sao Tome and Principe\" },\r\n        { code: \"SUR\", name: \"Suriname\" },\r\n        { code: \"SVK\", name: \"Slovakia\" },\r\n        { code: \"SVN\", name: \"Slovenia\" },\r\n        { code: \"SWE\", name: \"Sweden\" },\r\n        { code: \"SWZ\", name: \"Eswatini\" },\r\n        { code: \"SXM\", name: \"Sint Maarten (Dutch part)\" },\r\n        { code: \"SYC\", name: \"Seychelles\" },\r\n        { code: \"SYR\", name: \"Syrian Arab Republic\" },\r\n        { code: \"TCA\", name: \"Turks and Caicos Islands\" },\r\n        { code: \"TGO\", name: \"Togo\" },\r\n        { code: \"THA\", name: \"Thailand\" },\r\n        { code: \"TJK\", name: \"Tajikistan\" },\r\n        { code: \"TKL\", name: \"Tokelau\" },\r\n        { code: \"TKM\", name: \"Turkmenistan\" },\r\n        { code: \"TLS\", name: \"Timor-Leste\" },\r\n        { code: \"TON\", name: \"Tonga\" },\r\n        { code: \"TTO\", name: \"Trinidad and Tobago\" },\r\n        { code: \"TUN\", name: \"Tunisia\" },\r\n        { code: \"TUR\", name: \"Turkey\" },\r\n        { code: \"TUV\", name: \"Tuvalu\" },\r\n        { code: \"TWN\", name: \"Taiwan\" },\r\n        { code: \"TZA\", name: \"Tanzania\" },\r\n        { code: \"UGA\", name: \"Uganda\" },\r\n        { code: \"UKR\", name: \"Ukraine\" },\r\n        { code: \"ARE\", name: \"UAE\" },\r\n        { code: \"URY\", name: \"Uruguay\" },\r\n        { code: \"USA\", name: \"USA\" },\r\n        { code: \"UZB\", name: \"Uzbekistan\" },\r\n        { code: \"VAT\", name: \"Holy See\" },\r\n        { code: \"VCT\", name: \"Saint Vincent and the Grenadines\" },\r\n        { code: \"VEN\", name: \"Venezuela\" },\r\n        { code: \"VIR\", name: \"Virgin Islands (U.S.)\" },\r\n        { code: \"VNM\", name: \"Vietnam\" },\r\n        { code: \"VUT\", name: \"Vanuatu\" },\r\n        { code: \"WLF\", name: \"Wallis and Futuna\" },\r\n        { code: \"WSM\", name: \"Samoa\" },\r\n        { code: \"YEM\", name: \"Yemen\" },\r\n        { code: \"ZAF\", name: \"South Africa\" },\r\n        { code: \"ZMB\", name: \"Zambia\" },\r\n        { code: \"ZWE\", name: \"Zimbabwe\" },\r\n    ];\r\n\r\n    const code = countries.find((item) => item.name === name)?.code;\r\n\r\n    return code;\r\n}","import { GridColDef } from \"@mui/x-data-grid\";\r\n\r\nconst renderHistCell = (params) => {\r\n    if (params.value > 0) {\r\n      return (\r\n        <span style={{ color: \"lightgreen\" }}>\r\n          + {Intl.NumberFormat().format(params.value)}\r\n        </span>\r\n      );\r\n    } else if (params.value < 0) {\r\n      return (\r\n        <span style={{ color: \"lightcoral\" }}>\r\n          - {Intl.NumberFormat().format(params.value * -1)}\r\n        </span>\r\n      );\r\n    } else {\r\n      return (\r\n        <span style={{ color: \"khaki\" }}>\r\n          {Intl.NumberFormat().format(params.value)}\r\n        </span>\r\n      );\r\n    }\r\n  };\r\n\r\nexport const countryVaxCols: GridColDef[] = [\r\n    {\r\n        field: \"country\",\r\n        headerName: \"Country\",\r\n        flex: 1,\r\n    },\r\n    {\r\n        field: \"total\",\r\n        headerName: \"Total\",\r\n        flex: 1,\r\n        type: \"number\",\r\n        valueGetter: (params) => params.row.timeline[1].total\r\n    },\r\n    { \r\n        field: \"totalHist\",\r\n        headerName: \"Total (2 Day)\",\r\n        flex: 1,\r\n        valueGetter: (params) => params.row.timeline[1].total - params.row.timeline[0].total,\r\n        renderCell: renderHistCell\r\n    },\r\n    {\r\n        field: \"daily\",\r\n        headerName: \"Daily\",\r\n        flex: 1,\r\n        type: \"number\",\r\n        valueGetter: (params) => params.row.timeline[1].daily\r\n    },\r\n    { \r\n        field: \"dailyHist\",\r\n        headerName: \"Daily (2 Day)\",\r\n        flex: 1,\r\n        valueGetter: (params) => params.row.timeline[1].daily - params.row.timeline[0].daily,\r\n        renderCell: renderHistCell\r\n    }\r\n];\r\n\r\nexport const stateVaxCols: GridColDef[] = [\r\n    {\r\n        field: \"state\",\r\n        headerName: \"State\",\r\n        flex: 1,\r\n    },\r\n    {\r\n        field: \"total\",\r\n        headerName: \"Total\",\r\n        flex: 1,\r\n        type: \"number\",\r\n        valueGetter: (params) => params.row.timeline[1].total\r\n    },\r\n    { \r\n        field: \"totalHist\",\r\n        headerName: \"Total (2 Day)\",\r\n        flex: 1,\r\n        valueGetter: (params) => params.row.timeline[1].total - params.row.timeline[0].total,\r\n        renderCell: renderHistCell\r\n    },\r\n    {\r\n        field: \"daily\",\r\n        headerName: \"Daily\",\r\n        flex: 1,\r\n        type: \"number\",\r\n        valueGetter: (params) => params.row.timeline[1].daily\r\n    },\r\n    { \r\n        field: \"dailyHist\",\r\n        headerName: \"Daily (2 Day)\",\r\n        flex: 1,\r\n        valueGetter: (params) => params.row.timeline[1].daily - params.row.timeline[0].daily,\r\n        renderCell: renderHistCell\r\n    }\r\n];","import { useEffect, useState } from \"react\";\r\nimport VaccinesPage from \"./VaccinePage\";\r\nimport { getCountryISO3 } from \"../../scripts/CountryISO3Match\";\r\nimport { countryVaxCols } from \"./VaccineCols\";\r\nimport { parseData } from \"../../Graphs/parseData\";\r\nimport feats from \"../MapPage/MapFeatures/world_countries.json\";\r\nimport axios from \"axios\";\r\n\r\nfunction GlobalVaccinesPage() {\r\n  const [totals, setTotals] = useState<any>([]);\r\n  const [tableData, setTableData] = useState<any[]>([]);\r\n  const [mapData, setMapData] = useState<any[]>([]);\r\n  const [timeline, setTimeline] = useState<any[]>([]);\r\n  const [mapDomain, setMapDomain] = useState<number[]>([0, 1000000]);\r\n\r\n  const getMax = (arr) => {\r\n    let max = 0;\r\n    for(let i = 0; i < arr.length; i++) {\r\n      if (arr[i].value > max) {\r\n        max = arr[i].value;\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n\r\n  useEffect(() => {\r\n    // full data of global total for today\r\n    const fetchGlobalTotal = async () => {\r\n      try {\r\n        const r = await axios.get(\r\n          \"https://disease.sh/v3/covid-19/vaccine/coverage?lastdays=2&fullData=true\"\r\n        );\r\n        setTotals(r.data[0]);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    // full data of country totals for 2 days\r\n    const fetchCountryData = async () => {\r\n      try {\r\n        const r = await axios.get(\r\n          \"https://disease.sh/v3/covid-19/vaccine/coverage/countries?lastdays=3&fullData=true\"\r\n        );\r\n\r\n        setTableData(\r\n          r.data.map((country, idx) => ({\r\n            ...country,\r\n            id: idx,\r\n          }))\r\n        );\r\n\r\n        const temp = r.data.map((country) => ({\r\n          id: getCountryISO3(country.country),\r\n          value: country.timeline[1].total,\r\n        }));\r\n        setMapDomain([0, getMax(temp)]);\r\n        setMapData(temp);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    const fetchTimeline = async () => {\r\n      try {\r\n        const r = await axios.get(\r\n          \"https://disease.sh/v3/covid-19/vaccine/coverage?lastdays=10&fullData=false\"\r\n        );\r\n        console.log(r.data);\r\n        setTimeline([{ id: \"Vaccinations\", data: parseData(r.data) }]);\r\n      } catch (err) {}\r\n    };\r\n\r\n    fetchGlobalTotal();\r\n    fetchCountryData();\r\n    fetchTimeline();\r\n\r\n    console.log(tableData);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <VaccinesPage\r\n        totals={totals}\r\n        tableCols={countryVaxCols}\r\n        tableData={tableData}\r\n        mapData={mapData}\r\n        timeline={timeline}\r\n        mapConfig={{\r\n          proj: {\r\n            min: 125,\r\n            max: 600,\r\n          },\r\n          y: 0.63,\r\n          features: feats.features,\r\n          label: \"properties.name\",\r\n          colors: \"nivo\",\r\n          domain: mapDomain\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GlobalVaccinesPage;\r\n","import { useEffect, useState } from \"react\";\r\nimport VaccinesPage from \"./VaccinePage\";\r\nimport { stateVaxCols } from \"./VaccineCols\";\r\nimport { parseData } from \"../../Graphs/parseData\";\r\nimport feats from \"../MapPage/MapFeatures/us_states_albers.json\";\r\nimport axios from \"axios\";\r\n\r\nfunction USVaccinesPage() {\r\n  const [totals, setTotals] = useState<any>([]);\r\n  const [tableData, setTableData] = useState<any[]>([]);\r\n  const [mapData, setMapData] = useState<any[]>([]);\r\n  const [timeline, setTimeline] = useState<any[]>([]);\r\n  const [mapDomain, setMapDomain] = useState<number[]>([0, 1000000]);\r\n\r\n  const getMax = (arr) => {\r\n    let max = 0;\r\n    for(let i = 0; i < arr.length; i++) {\r\n      if (arr[i].value > max) {\r\n        max = arr[i].value;\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n\r\n  useEffect(() => {\r\n    // full data of State totals for 2 days\r\n    const fetchStateData = async () => {\r\n      try {\r\n        const r = await axios.get(\r\n          \"https://disease.sh/v3/covid-19/vaccine/coverage/states?lastdays=3&fullData=true\"\r\n        );\r\n\r\n        let data = r.data;\r\n        let total = data.find((i) => i.state === \"United States\");\r\n        data.splice(data.indexOf(total), 1);\r\n\r\n        let index = data.indexOf(\r\n          data.find((i) => i.state === \"New York State\")\r\n        );\r\n        console.log(index);\r\n        if (index) {\r\n          data[index].state = \"New York\";\r\n        }\r\n\r\n        setTotals(total.timeline[1]);\r\n        setTableData(\r\n          data.map((state, idx) => ({\r\n            ...state,\r\n            id: idx,\r\n          }))\r\n        );\r\n\r\n        const temp = data.map((state) => ({\r\n          id: state.state,\r\n          value: state.timeline[1].total,\r\n        }));\r\n        setMapDomain([0, getMax(temp)]);\r\n        setMapData(temp);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    const fetchTimeline = async () => {\r\n      try {\r\n        const r = await axios.get(\r\n          \"https://disease.sh/v3/covid-19/vaccine/coverage/countries/USA?lastdays=10&fullData=false\"\r\n        );\r\n        console.log(r.data);\r\n        setTimeline([{ id: \"Vaccinations\", data: parseData(r.data.timeline) }]);\r\n      } catch (err) {}\r\n    };\r\n\r\n    fetchStateData();\r\n    fetchTimeline();\r\n\r\n    console.log(tableData);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <VaccinesPage\r\n        totals={totals}\r\n        tableCols={stateVaxCols}\r\n        tableData={tableData}\r\n        mapData={mapData}\r\n        timeline={timeline}\r\n        mapConfig={{\r\n          proj: {\r\n            min: 350,\r\n            max: 600,\r\n          },\r\n          y: 0.5,\r\n          features: feats.features,\r\n          label: \"properties.state_name\",\r\n          colors: \"nivo\",\r\n          domain: mapDomain\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default USVaccinesPage;\r\n","import { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Button,\r\n  Toolbar,\r\n  Typography,\r\n  Grid,\r\n  Menu,\r\n  MenuItem,\r\n  Divider,\r\n} from \"@mui/material\";\r\nimport { KeyboardArrowDown } from \"@mui/icons-material\";\r\nimport { MdOutlineCoronavirus } from \"react-icons/md\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NavBar() {\r\n  const [title, setTitle] = useState<string>(\"\");\r\n  const [usMenuAnchor, setUsMenuAnchor] = useState<null | HTMLElement>(null);\r\n  const [globalMenuAnchor, setGlobalMenuAnchor] =\r\n    useState<null | HTMLElement>();\r\n  const [vaxMenuAnchor, setVaxMenuAnchor] = useState<null | HTMLElement>(null);\r\n  const openUSMenu = Boolean(usMenuAnchor);\r\n  const openGlobalMenu = Boolean(globalMenuAnchor);\r\n  const openVaxMenu = Boolean(vaxMenuAnchor);\r\n\r\n  const styles = {\r\n    link: {\r\n      textDecoration: \"none\",\r\n    },\r\n  }\r\n\r\n  const handleUSClose = () => {\r\n    setUsMenuAnchor(null);\r\n  };\r\n  const handleGlobalClose = () => { \r\n    setGlobalMenuAnchor(null);\r\n  };\r\n  const handleVaxClose = () => {\r\n    setVaxMenuAnchor(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar style={{ justifyContent: \"space-between\", alignItems: \"center\" }} variant=\"dense\">\r\n          <Link to=\"/\" style={styles.link}>\r\n            <Button\r\n              variant=\"text\"\r\n              sx={{ marginRight: \"50px\", paddingTop: \"10px\" }}\r\n              onClick={() => setTitle(\"\")}\r\n            >\r\n              <Grid container>\r\n                <Grid item>\r\n                  <Typography variant=\"h4\"><MdOutlineCoronavirus /></Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"h5\"> COVID-19 Dashboard</Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Button>\r\n          </Link>\r\n          <Typography variant=\"h5\">{title}</Typography>\r\n          <div>\r\n            <Button\r\n              variant=\"contained\"\r\n              sx={{ marginRight: \"10px\" }}\r\n              onClick={(e) => setUsMenuAnchor(e.currentTarget)}\r\n              endIcon={<KeyboardArrowDown />}\r\n            >\r\n              US Data\r\n            </Button>\r\n            <Menu\r\n              id=\"basic-menu\"\r\n              anchorEl={usMenuAnchor}\r\n              open={openUSMenu}\r\n              onClose={handleUSClose}\r\n              MenuListProps={{\r\n                \"aria-labelledby\": \"basic-button\",\r\n              }}\r\n            >\r\n              <Link to=\"/map/us\" style={styles.link}>\r\n                <MenuItem\r\n                  onClick={() => {\r\n                    setTitle(\"US Map\");\r\n                    handleUSClose();\r\n                  }}\r\n                  sx={{ color: \"white\" }}\r\n                >\r\n                  US Map\r\n                </MenuItem>\r\n              </Link>\r\n              <Divider />\r\n              <Link to=\"/statistics/us\" style={styles.link}>\r\n                <MenuItem\r\n                  onClick={() => {\r\n                    setTitle(\"US Statistics\");\r\n                    handleUSClose();\r\n                  }}\r\n                  sx={{ color: \"white\" }}\r\n                >\r\n                  US Statistics\r\n                </MenuItem>\r\n              </Link>\r\n            </Menu>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              sx={{ marginRight: \"10px\" }}\r\n              onClick={(e) => setGlobalMenuAnchor(e.currentTarget)}\r\n              endIcon={<KeyboardArrowDown />}\r\n            >\r\n              Global Data\r\n            </Button>\r\n            <Menu\r\n              id=\"basic-menu\"\r\n              anchorEl={globalMenuAnchor}\r\n              open={openGlobalMenu}\r\n              onClose={handleGlobalClose}\r\n              MenuListProps={{\r\n                \"aria-labelledby\": \"basic-button\",\r\n              }}\r\n            >\r\n              <Link to=\"/map\" style={styles.link}>\r\n                <MenuItem\r\n                  onClick={() => {\r\n                    setTitle(\"Global Map\");\r\n                    handleGlobalClose();\r\n                  }}\r\n                  sx={{ color: \"white\" }}\r\n                >\r\n                  Global Map\r\n                </MenuItem>\r\n              </Link>\r\n              <Divider />\r\n              <Link to=\"/statistics\" style={styles.link}>\r\n                <MenuItem\r\n                  onClick={() => {\r\n                    setTitle(\"Global Statistics\");\r\n                    handleGlobalClose();\r\n                  }}\r\n                  sx={{ color: \"white\" }}\r\n                >\r\n                  Global Statistics\r\n                </MenuItem>\r\n              </Link>\r\n            </Menu>\r\n            <Button\r\n              variant=\"contained\"\r\n              sx={{ marginRight: \"10px\" }}\r\n              onClick={(e) => setVaxMenuAnchor(e.currentTarget)}\r\n              endIcon={<KeyboardArrowDown />}\r\n            >\r\n              Vaccine Data\r\n            </Button>\r\n            <Menu\r\n              id=\"basic-menu\"\r\n              anchorEl={vaxMenuAnchor}\r\n              open={openVaxMenu}\r\n              onClose={handleVaxClose}\r\n              MenuListProps={{\r\n                \"aria-labelledby\": \"basic-button\",\r\n              }}\r\n            >\r\n              <Link to=\"/vaccines/us\" style={styles.link}>\r\n                <MenuItem\r\n                  onClick={() => {\r\n                    setTitle(\"US Vaccines\");\r\n                    handleVaxClose();\r\n                  }}\r\n                  sx={{ color: \"white\" }}\r\n                >\r\n                  US Vaccine Data\r\n                </MenuItem>\r\n              </Link>\r\n              <Divider />\r\n              <Link to=\"/vaccines\" style={styles.link}>\r\n                <MenuItem\r\n                  onClick={() => {\r\n                    setTitle(\"Global Vaccines\");\r\n                    handleVaxClose();\r\n                  }}\r\n                  sx={{ color: \"white\" }}\r\n                >\r\n                  Global Vaccine Data\r\n                </MenuItem>\r\n              </Link>\r\n            </Menu>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { AppBar, Typography } from \"@mui/material\";\r\n\r\nfunction AppFooter() {\r\n  return (\r\n    <div>\r\n      <AppBar\r\n        sx={{ top: \"auto\", bottom: 0, height: \"50px\", paddingTop: \"15px\" }}\r\n      >\r\n        <Typography variant=\"button\" align=\"center\">\r\n          Created by Kierstyn Just\r\n        </Typography>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppFooter;\r\n","import \"./App.css\";\nimport HomePage from \"./pages/HomePage/HomePage\";\nimport USStatsPage from \"./pages/StatsPage/USStatsPage\";\nimport GlobalStatsPage from \"./pages/StatsPage/GlobalStatsPage\";\nimport GlobalMapPage from \"./pages/MapPage/GlobalMapPage\";\nimport USMapPage from \"./pages/MapPage/USMapPage\";\nimport GlobalVaccinesPage from \"./pages/VaccinePage/GlobalVaccinesPage\";\nimport USVaccinesPage from \"./pages/VaccinePage/USVaccinesPage\";\nimport NavBar from \"./NavBar/NavBar\";\nimport AppFooter from \"./NavBar/AppFooter\";\nimport { HashRouter, BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { createTheme, ThemeProvider, CssBaseline } from \"@mui/material\";\nimport \"@fontsource/roboto/400.css\";\n\nfunction App() {\n  const darkTheme = createTheme({\n    palette: {\n      mode: \"dark\",\n    },\n  });\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <CssBaseline />\n      <HashRouter basename=\"/\">\n        <NavBar />\n        <div style={{ padding: \"80px 40px\" }}>\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/statistics\" element={<GlobalStatsPage />} />\n            <Route path=\"/map\" element={<GlobalMapPage />} />\n            <Route path=\"/statistics/us\" element={<USStatsPage />} />\n            <Route path=\"/map/us\" element={<USMapPage />} />\n            <Route path=\"/vaccines\" element={<GlobalVaccinesPage />} />\n            <Route path=\"/vaccines/us\" element={<USVaccinesPage />} />\n          </Routes>\n        </div>\n        <AppFooter />\n      </HashRouter>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}